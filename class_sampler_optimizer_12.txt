DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['schema', 'example']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['task_desc_str', 'input_label', 'examples_str', 'output_format_str', 'input']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['label', 'input', 'output', 'description']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'input_label', 'examples_str', 'output_format_str', 'input']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['schema', 'example']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'input_label', 'examples_str', 'output_format_str', 'input']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['schema', 'example']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['schema', 'example']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['schema', 'example']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optim.optimizer.BootstrapFewShot object at 0x162599fd0>
few_shot_state_dict: None
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1622cce90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x16220f140> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1622cc250>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14301'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'9m51.371999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0qab72eahac96qz29c2j5g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=XNg9lN_JxGcuNvFuB8kjsXEqE0gprNqqfpILKznl_vU-1716937633-1.0.1.1-L5hciLY.TZUQs93gSscH7C_CHylOc6eCW.Ml0M6TGe8jX_2Ow_fjSm7y1qXumnxLGePLzOBpEcUGIEETTGCtRw; path=/; expires=Tue, 28-May-24 23:37:13 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e64e19dcf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common abbreviation for a type of electronic device.
class_name: ABBR
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14300'), (b'x-ratelimit-remaining-tokens', b'29226'), (b'x-ratelimit-reset-requests', b'9m59.732s'), (b'x-ratelimit-reset-tokens', b'1.547s'), (b'x-request-id', b'req_01hz0qabhef1r8t3v4f053a4w0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6500b71f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
data: {'text': 'What does S.O.S. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does S.O.S. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does S.O.S. stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does S.O.S. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14299'), (b'x-ratelimit-remaining-tokens', b'28942'), (b'x-ratelimit-reset-requests', b'10m5.719999999s'), (b'x-ratelimit-reset-tokens', b'2.115s'), (b'x-request-id', b'req_01hz0qabt8e399wcqwty2aw5pq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e651ed47f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14298'), (b'x-ratelimit-remaining-tokens', b'28647'), (b'x-ratelimit-reset-requests', b'10m11.727999999s'), (b'x-ratelimit-reset-tokens', b'2.705s'), (b'x-request-id', b'req_01hz0qac2rf4rbkvwhp6ym3pka'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6539eaef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol, which is a common abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What war did Florence Nightingale tend the troops in ?', 'coarse_label': 1, 'fine_label': 8}
task_input: What war did Florence Nightingale tend the troops in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What war did Florence Nightingale tend the troops in ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What war did Florence Nightingale tend the troops in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14297'), (b'x-ratelimit-remaining-tokens', b'28373'), (b'x-ratelimit-reset-requests', b'10m17.694s'), (b'x-ratelimit-reset-tokens', b'3.253s'), (b'x-request-id', b'req_01hz0qaccbf1r92m6s0kjrrqxx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6558840f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about Florence Nightingale's involvement in a war, which suggests that the answer is a specific event or conflict.
class_name: Entity
class_index: 1
data: {'text': 'What language is mostly spoken in Brazil ?', 'coarse_label': 1, 'fine_label': 11}
task_input: What language is mostly spoken in Brazil ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What language is mostly spoken in Brazil ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What language is mostly spoken in Brazil ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14296'), (b'x-ratelimit-remaining-tokens', b'28064'), (b'x-ratelimit-reset-requests', b'10m23.758999999s'), (b'x-ratelimit-reset-tokens', b'3.872s'), (b'x-request-id', b'req_01hz0qackyf1rbp3mt8yas5yd0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e65719bff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the language spoken in Brazil, which is Portuguese.
class_name: "DESC"
class_index: "2"
```
data: {'text': 'What song did Patti Page set people dancing to in 1950 ?', 'coarse_label': 1, 'fine_label': 5}
task_input: What song did Patti Page set people dancing to in 1950 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What song did Patti Page set people dancing to in 1950 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What song did Patti Page set people dancing to in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14295'), (b'x-ratelimit-remaining-tokens', b'27831'), (b'x-ratelimit-reset-requests', b'10m29.617999999s'), (b'x-ratelimit-reset-tokens', b'4.338s'), (b'x-request-id', b'req_01hz0qaczwe9h860t1te7b74t0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6596bc1f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific event in the past, and it involves a person (Patti Page) and a song, which are both entities.
class_name: Entity
class_index: 1
data: {'text': "In Beetle Bailey , can you name Sarge 's dog ?", 'coarse_label': 1, 'fine_label': 2}
task_input: In Beetle Bailey , can you name Sarge 's dog ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "In Beetle Bailey , can you name Sarge 's dog ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Beetle Bailey , can you name Sarge 's dog ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14294'), (b'x-ratelimit-remaining-tokens', b'27515'), (b'x-ratelimit-reset-requests', b'10m35.756s'), (b'x-ratelimit-reset-tokens', b'4.97s'), (b'x-request-id', b'req_01hz0qad7hf72t7cnztsgp04n3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e65afd2bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a dog, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'What were the three prophecies the witches make to Macbeth ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What were the three prophecies the witches make to Macbeth ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What were the three prophecies the witches make to Macbeth ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What were the three prophecies the witches make to Macbeth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14293'), (b'x-ratelimit-remaining-tokens', b'27260'), (b'x-ratelimit-reset-requests', b'10m41.646s'), (b'x-ratelimit-reset-tokens', b'5.48s'), (b'x-request-id', b'req_01hz0qadjmf8ha5z025fvkg3nn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e65d3f30f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the content of a play, which is a fictional work, so it's likely referring to a specific scene or dialogue in the play.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why was the L.A. office of Shea and Gould closed ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why was the L.A. office of Shea and Gould closed ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why was the L.A. office of Shea and Gould closed ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why was the L.A. office of Shea and Gould closed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14292'), (b'x-ratelimit-remaining-tokens', b'26954'), (b'x-ratelimit-reset-requests', b'10m47.726999999s'), (b'x-ratelimit-reset-tokens', b'6.091s'), (b'x-request-id', b'req_01hz0qadv5fp3bfxr7n0dmkeg1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e65ee8aef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reason for the closure of an office, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the history of Spartacus , the Roman slave and gladiator ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the history of Spartacus , the Roman slave and gladiator ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14291'), (b'x-ratelimit-remaining-tokens', b'26651'), (b'x-ratelimit-reset-requests', b'10m53.743s'), (b'x-ratelimit-reset-tokens', b'6.697s'), (b'x-request-id', b'req_01hz0qae37ebxah26rvjvvd4dv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6608a1af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the history of a specific person, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What does the word affiant mean ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does the word affiant mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the word affiant mean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the word affiant mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14290'), (b'x-ratelimit-remaining-tokens', b'26373'), (b'x-ratelimit-reset-requests', b'10m59.711999999s'), (b'x-ratelimit-reset-tokens', b'7.254s'), (b'x-request-id', b'req_01hz0qaec8e2jrzxny9q5y8sy4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6625b6cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a word, which is a common definition of an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who do Herb and Tootsie live next door to ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who do Herb and Tootsie live next door to ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who do Herb and Tootsie live next door to ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who do Herb and Tootsie live next door to ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14289'), (b'x-ratelimit-remaining-tokens', b'26059'), (b'x-ratelimit-reset-requests', b'11m5.767999999s'), (b'x-ratelimit-reset-tokens', b'7.881s'), (b'x-request-id', b'req_01hz0qaekhfyjve27rv614nwjx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e663cc94f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the neighbors of Herb and Tootsie, which suggests that the answer is a person or a group of people.
class_name: Human being
class_index: 3
data: {'text': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14288'), (b'x-ratelimit-remaining-tokens', b'25752'), (b'x-ratelimit-reset-requests', b'11m11.720999999s'), (b'x-ratelimit-reset-tokens', b'8.494999999s'), (b'x-request-id', b'req_01hz0qaewaf8h8bnkaw8gcew7z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6658e0bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who served as a journalist for Reuter and The Times of London, which makes it likely to be a human being.
class_name: HUM
class_index: 3
data: {'text': "What cable network bills itself as `` the family entertainer '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What cable network bills itself as `` the family entertainer '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What cable network bills itself as `` the family entertainer '' ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What cable network bills itself as `` the family entertainer '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14287'), (b'x-ratelimit-remaining-tokens', b'25462'), (b'x-ratelimit-reset-requests', b'11m17.705s'), (b'x-ratelimit-reset-tokens', b'9.075s'), (b'x-request-id', b'req_01hz0qaf5he39sqdefvmxq344p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6676f89f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the name or description of a cable network, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What creative genius said : `` Everything comes to him who hustles while he waits '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What creative genius said : `` Everything comes to him who hustles while he waits '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14286'), (b'x-ratelimit-remaining-tokens', b'25188'), (b'x-ratelimit-reset-requests', b'11m23.674999999s'), (b'x-ratelimit-reset-tokens', b'9.623s'), (b'x-request-id', b'req_01hz0qaffrf8h9dvr7dggjwzqp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e669693df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The quote mentions a creative genius, which is a human being, and the quote is attributed to someone who said it, which is also a human being.
class_name: HUM
class_index: 3
data: {'text': 'What U.S. state includes the San Juan Islands ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What U.S. state includes the San Juan Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What U.S. state includes the San Juan Islands ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state includes the San Juan Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14285'), (b'x-ratelimit-remaining-tokens', b'25364'), (b'x-ratelimit-reset-requests', b'11m28.779s'), (b'x-ratelimit-reset-tokens', b'9.272s'), (b'x-request-id', b'req_01hz0qagnyfp3bjg4wjvn73dmy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6711facf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a U.S. state that includes the San Juan Islands.
class_name: Location
class_index: 4
data: {'text': 'Where is Webster University ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Webster University ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Webster University ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Webster University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14284'), (b'x-ratelimit-remaining-tokens', b'25090'), (b'x-ratelimit-reset-requests', b'11m35.701s'), (b'x-ratelimit-reset-tokens', b'9.82s'), (b'x-request-id', b'req_01hz0qagzafykaa5t8s1zb6r3x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e672f943f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a specific university, which is typically represented by its name and location.
class_name: Location
class_index: 4
data: {'text': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14283'), (b'x-ratelimit-remaining-tokens', b'24782'), (b'x-ratelimit-reset-requests', b'11m41.741s'), (b'x-ratelimit-reset-tokens', b'10.436s'), (b'x-request-id', b'req_01hz0qah7df1ra5qprw4srj4jh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6749a95f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location where one can find information about the English Civil War, which is a historical event.
class_name: Location
class_index: 4
data: {'text': 'What country imposed the Berlin Blockade in 1948 ?', 'coarse_label': 4, 'fine_label': 33}
task_input: What country imposed the Berlin Blockade in 1948 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What country imposed the Berlin Blockade in 1948 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What country imposed the Berlin Blockade in 1948 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14282'), (b'x-ratelimit-remaining-tokens', b'24482'), (b'x-ratelimit-reset-requests', b'11m47.733s'), (b'x-ratelimit-reset-tokens', b'11.035s'), (b'x-request-id', b'req_01hz0qahfte39vbjtezzftpg19'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6763be6f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically the Berlin Blockade, which was imposed by a country.
class_name: Location
class_index: 4
data: {'text': 'What is the average hourly rate of American workers ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the average hourly rate of American workers ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average hourly rate of American workers ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average hourly rate of American workers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14281'), (b'x-ratelimit-remaining-tokens', b'24188'), (b'x-ratelimit-reset-requests', b'11m53.729999999s'), (b'x-ratelimit-reset-tokens', b'11.624s'), (b'x-request-id', b'req_01hz0qahr8fygaabvx890jtht0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e677ed62f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a numerical value, specifically the average hourly rate of American workers.
class_name: NUM
class_index: 5
data: {'text': "How many types of dogs ' tails are there - three", 'coarse_label': 5, 'fine_label': 38}
task_input: How many types of dogs ' tails are there - three, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many types of dogs ' tails are there - three", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many types of dogs ' tails are there - three
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14280'), (b'x-ratelimit-remaining-tokens', b'23883'), (b'x-ratelimit-reset-requests', b'11m59.767999999s'), (b'x-ratelimit-reset-tokens', b'12.234s'), (b'x-request-id', b'req_01hz0qahzjf4rtwfexyhq5ezk2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6796eb0f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of types of dog tails, which is a specific and countable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the exchange rate between England and the U.S. ?', 'coarse_label': 5, 'fine_label': 41}
task_input: What is the exchange rate between England and the U.S. ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the exchange rate between England and the U.S. ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the exchange rate between England and the U.S. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14279'), (b'x-ratelimit-remaining-tokens', b'23658'), (b'x-ratelimit-reset-requests', b'12m5.587s'), (b'x-ratelimit-reset-tokens', b'12.684s'), (b'x-request-id', b'req_01hz0qajcgf4rt6wvhxqzv0f1a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e67bf926f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a conversion rate between two countries, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much will the California be in the year 2000 ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much will the California be in the year 2000 ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much will the California be in the year 2000 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much will the California be in the year 2000 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14278'), (b'x-ratelimit-remaining-tokens', b'23383'), (b'x-ratelimit-reset-requests', b'12m11.699s'), (b'x-ratelimit-reset-tokens', b'13.233s'), (b'x-request-id', b'req_01hz0qajnyfp381x9kjjemh1zd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e67dda9cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the future value of California in the year 2000, which is a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 1, 2, 1, 3, 2, 1, 3, 0, 3, 3, 0, 3, 4, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Start: 0.75, F1: 0.729, score: 1.479
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14277'), (b'x-ratelimit-remaining-tokens', b'23131'), (b'x-ratelimit-reset-requests', b'12m17.651s'), (b'x-ratelimit-reset-tokens', b'13.737s'), (b'x-request-id', b'req_01hz0qak0wf1rax2bh8621j639'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6800c61f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the distance between two cities, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14276'), (b'x-ratelimit-remaining-tokens', b'22893'), (b'x-ratelimit-reset-requests', b'12m23.633s'), (b'x-ratelimit-reset-tokens', b'14.213s'), (b'x-request-id', b'req_01hz0qakcbf4rrptwbaj7veqxj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6825e96f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a county in California.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14275'), (b'x-ratelimit-remaining-tokens', b'22633'), (b'x-ratelimit-reset-requests', b'12m29.695s'), (b'x-ratelimit-reset-tokens', b'14.734s'), (b'x-request-id', b'req_01hz0qaknyf1r89cnm2ww4tmnw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e684480af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person, so it's likely referring to a human being.
class_name: "HUM"
class_index: 3
```
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14274'), (b'x-ratelimit-remaining-tokens', b'22417'), (b'x-ratelimit-reset-requests', b'12m35.587s'), (b'x-ratelimit-reset-tokens', b'15.165s'), (b'x-request-id', b'req_01hz0qam2vfk6aqjfatqehmn88'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e686da6af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of an atom, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14273'), (b'x-ratelimit-remaining-tokens', b'22201'), (b'x-ratelimit-reset-requests', b'12m41.583s'), (b'x-ratelimit-reset-tokens', b'15.598s'), (b'x-request-id', b'req_01hz0qamfxf8hv6rxsqx422apb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6896d1df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in time, which is typically represented by a date.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14272'), (b'x-ratelimit-remaining-tokens', b'21925'), (b'x-ratelimit-reset-requests', b'12m47.704s'), (b'x-ratelimit-reset-tokens', b'16.149s'), (b'x-request-id', b'req_01hz0qams6e39r0trs8wgrbw6h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e68b5ec5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the height of a specific building, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14272'), (b'x-ratelimit-remaining-tokens', b'22010'), (b'x-ratelimit-reset-requests', b'12m47.768999999s'), (b'x-ratelimit-reset-tokens', b'15.98s'), (b'x-request-id', b'req_01hz0qan0ee39s7e9tq25ew90g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e68ccfe7f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14271'), (b'x-ratelimit-remaining-tokens', b'22646'), (b'x-ratelimit-reset-requests', b'12m51.7s'), (b'x-ratelimit-reset-tokens', b'14.707s'), (b'x-request-id', b'req_01hz0qaq13f4rtr3swkp5a9edd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e699bb5cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14271'), (b'x-ratelimit-remaining-tokens', b'22788'), (b'x-ratelimit-reset-requests', b'12m53.667999999s'), (b'x-ratelimit-reset-tokens', b'14.424s'), (b'x-request-id', b'req_01hz0qaqbgf1rvdbqzxdys035v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e69bbd57f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14270'), (b'x-ratelimit-remaining-tokens', b'23427'), (b'x-ratelimit-reset-requests', b'12m57.605s'), (b'x-ratelimit-reset-tokens', b'13.145s'), (b'x-request-id', b'req_01hz0qasbye9htsnanxyhqz5vr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6a8a83df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14270'), (b'x-ratelimit-remaining-tokens', b'23556'), (b'x-ratelimit-reset-requests', b'12m59.675999999s'), (b'x-ratelimit-reset-tokens', b'12.888s'), (b'x-request-id', b'req_01hz0qasp3fda86pvhvavc5qrx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6aaba19f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14269'), (b'x-ratelimit-remaining-tokens', b'24197'), (b'x-ratelimit-reset-requests', b'13m3.613s'), (b'x-ratelimit-reset-tokens', b'11.605s'), (b'x-request-id', b'req_01hz0qavphfaqvn48qft4hqr0g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6b79de4f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color, which is a descriptive concept, so it's classified as a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14269'), (b'x-ratelimit-remaining-tokens', b'24281'), (b'x-ratelimit-reset-requests', b'13m5.755s'), (b'x-ratelimit-reset-tokens', b'11.438s'), (b'x-request-id', b'req_01hz0qavy8f8hvb3a43vxxx3yq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6b92f1bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14268'), (b'x-ratelimit-remaining-tokens', b'24928'), (b'x-ratelimit-reset-requests', b'13m9.688999999s'), (b'x-ratelimit-reset-tokens', b'10.144s'), (b'x-request-id', b'req_01hz0qaxyse7kva9h8ch2f7dyz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6c6095af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is typically described in a medical dictionary or a health resource.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14268'), (b'x-ratelimit-remaining-tokens', b'25015'), (b'x-ratelimit-reset-requests', b'13m11.75s'), (b'x-ratelimit-reset-tokens', b'9.97s'), (b'x-request-id', b'req_01hz0qay6mf4s91x688epxz5gc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6c79abef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14267'), (b'x-ratelimit-remaining-tokens', b'25652'), (b'x-ratelimit-reset-requests', b'13m15.692999999s'), (b'x-ratelimit-reset-tokens', b'8.696s'), (b'x-request-id', b'req_01hz0qb06xf8j9mhpsdmygas7s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6d47de9f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a city that hosted a world fair in 1900, which suggests a specific location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14267'), (b'x-ratelimit-remaining-tokens', b'26370'), (b'x-ratelimit-reset-requests', b'13m16.487999999s'), (b'x-ratelimit-reset-tokens', b'7.259s'), (b'x-request-id', b'req_01hz0qb1p6e2mbb47xa51gtwx9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6dded32f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14266'), (b'x-ratelimit-remaining-tokens', b'26511'), (b'x-ratelimit-reset-requests', b'13m21.423999999s'), (b'x-ratelimit-reset-tokens', b'6.977s'), (b'x-request-id', b'req_01hz0qb2qef4sr03t6t9np6d7w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6e49a31f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14266'), (b'x-ratelimit-remaining-tokens', b'26589'), (b'x-ratelimit-reset-requests', b'13m23.769999999s'), (b'x-ratelimit-reset-tokens', b'6.821s'), (b'x-request-id', b'req_01hz0qb2ynfyh9ttxjqtsnevtp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6e5fb4ff9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14265'), (b'x-ratelimit-remaining-tokens', b'27227'), (b'x-ratelimit-reset-requests', b'13m27.704s'), (b'x-ratelimit-reset-tokens', b'5.545s'), (b'x-request-id', b'req_01hz0qb4z7e7kvgaz973fme0dm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6f2ed99f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific value, which is a characteristic of a numeric value.
class_name: NUM
class_index: 5
```
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14265'), (b'x-ratelimit-remaining-tokens', b'27358'), (b'x-ratelimit-reset-requests', b'13m29.677999999s'), (b'x-ratelimit-reset-tokens', b'5.283s'), (b'x-request-id', b'req_01hz0qb59ae2mvt0jsswv19agk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e6f4ef25f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14264'), (b'x-ratelimit-remaining-tokens', b'28006'), (b'x-ratelimit-reset-requests', b'13m33.591s'), (b'x-ratelimit-reset-tokens', b'3.988s'), (b'x-request-id', b'req_01hz0qb7ahfarbtn6c3z84v1aj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7020af5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific person who achieved a notable feat, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14264'), (b'x-ratelimit-remaining-tokens', b'28107'), (b'x-ratelimit-reset-requests', b'13m35.726999999s'), (b'x-ratelimit-reset-tokens', b'3.785s'), (b'x-request-id', b'req_01hz0qb7k3fym8smsxm7zfce4d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e703bc20f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14263'), (b'x-ratelimit-remaining-tokens', b'28747'), (b'x-ratelimit-reset-requests', b'13m39.668s'), (b'x-ratelimit-reset-tokens', b'2.506s'), (b'x-request-id', b'req_01hz0qb9kee2fv8d9d6186mbyp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7108e02f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in time, which is typically represented by a date.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14263'), (b'x-ratelimit-remaining-tokens', b'28835'), (b'x-ratelimit-reset-requests', b'13m41.756s'), (b'x-ratelimit-reset-tokens', b'2.329s'), (b'x-request-id', b'req_01hz0qb9v3e2msjasyscq8dw5j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7121f4af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14262'), (b'x-ratelimit-remaining-tokens', b'29470'), (b'x-ratelimit-reset-requests', b'13m45.7s'), (b'x-ratelimit-reset-tokens', b'1.06s'), (b'x-request-id', b'req_01hz0qbbvafym8g69h0dg3s85c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e71ef9b5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of crickets, which is a specific fact about a living thing, so it's likely to be a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14262'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'13m47.661999999s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0qbc5yfp4tvx6nbb1mj5jw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7211b81f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14261'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'13m51.606s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qbe66f4ta5kxb7bfcz7pb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e72ded4ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a physical property of a metal, which is a characteristic of a substance.
class_name: "NUM"
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14261'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'13m53.776999999s'), (b'x-ratelimit-reset-tokens', b'793ms'), (b'x-request-id', b'req_01hz0qbed5e2nbah0nqza5j9g0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e72f4e61f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14260'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'13m57.715s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0qbgdme9jrj1ranq4c8tzq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e73c3f69f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person who developed a vaccination, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14260'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'13m59.730999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qbgp2fp58zc7q1p7njy2x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e73de8aef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14259'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'14m3.641999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0qbjqbe7ms0ysefaap7r9m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e74aca5df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is a type of abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14259'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'14m5.725999999s'), (b'x-ratelimit-reset-tokens', b'743ms'), (b'x-request-id', b'req_01hz0qbjzyeajtj3hdns8q01wy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e74c9bc2f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14258'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'14m9.648s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qbn0we2naw2zfa54f4syz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e759aecff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 1, 2, 2, 2, 4, 3, 5, 3, 2, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Test Accuracy Start: 0.75, F1: 0.677, score: 1.479
step: 0
train_batch: {'text': ["What year did Degas create the bronze sculpture , `` Fourth Position Front ? ''", "What Grand Slam golf tournament wasn 't held between 1940 and 1945 ?", 'Name a Gaelic language .', 'How big is the Chappellet vineyard ?', 'How many cards are dealt to each player in Gin Rummy ?', 'What is the correct way to mount a roll of toilet paper ?', 'What famous events have happened on March 27 ?', 'Who invented the Moog Synthesizer ?', 'How many web servers are there ?', 'How many children under 18 are victims of some sort of Physical Abuse each year ?'], 'coarse_label': tensor([5, 1, 1, 5, 5, 1, 1, 3, 5, 5]), 'fine_label': tensor([39, 17, 11, 48, 38, 20,  8, 29, 38, 38])}
before random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=2318, data={'text': "What 's the most popular contact lens color ?", 'coarse_label': 1, 'fine_label': 4}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1482, data={'text': 'Which city in Canada is the least-populated ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=356, data={'text': 'What is the full name of the PLO ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1659, data={'text': 'What 1976 Deep Throat clone provides the leading lady with a second larynx ?', 'coarse_label': 1, 'fine_label': 13}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=991, data={'text': 'What country owns Corsica ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14258'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'14m11.725999999s'), (b'x-ratelimit-reset-tokens', b'757ms'), (b'x-request-id', b'req_01hz0qbn9ffymr6x1b9vt26fq6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e75b681ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:07:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14257'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'14m15.664s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0qbq9we7mtbzshvj3qwz0e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e768392ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation VCR, which is a common abbreviation for a type of electronic device.
class_name: Abbreviation
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:07:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14257'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'14m17.733s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0qbqj9e2nr5n05ex7hrqdp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e769fa4ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'14m21.670999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qbsjqfp5beb4gdv8gddtn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e776db72f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
data: {'text': 'What does S.O.S. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does S.O.S. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does S.O.S. stand for ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does S.O.S. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'14m23.748s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0qbstme3bvy617ym276qsg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7786cbff9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'14m27.683999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qbvv4fynbkhqp0dq8ezd6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7855feef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by a sequence of letters that represents a word or phrase.
class_name: Abbreviation
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'29642'), (b'x-ratelimit-reset-requests', b'14m29.651s'), (b'x-ratelimit-reset-tokens', b'716ms'), (b'x-request-id', b'req_01hz0qbw62f759ydx6zyr1kq1h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7877992f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'14m33.594s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0qby6bf1ttj3we30a4n0vk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7945c58f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol, which is often represented by a ribbon, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What war did Florence Nightingale tend the troops in ?', 'coarse_label': 1, 'fine_label': 8}
task_input: What war did Florence Nightingale tend the troops in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What war did Florence Nightingale tend the troops in ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What war did Florence Nightingale tend the troops in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'14m35.709999999s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0qbyfefyn8p8tvnzhhbrvt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7962e40f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'14m39.65s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0qc0ftfdcbwn1g6sg6rq72'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7a30869f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical event, and Florence Nightingale is a well-known historical figure, so it's likely that the question is about her work during a war.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What language is mostly spoken in Brazil ?', 'coarse_label': 1, 'fine_label': 11}
task_input: What language is mostly spoken in Brazil ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What language is mostly spoken in Brazil ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What language is mostly spoken in Brazil ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'14m41.314s'), (b'x-ratelimit-reset-tokens', b'861ms'), (b'x-request-id', b'req_01hz0qc159fynsrdh1z6sck2xb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7a75bc3f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'14m45.245999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0qc35xe3cb8k8ejng7qmkg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7b44decf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the language spoken in Brazil, which is Portuguese.
class_name: "DESC"
class_index: 2
```
data: {'text': 'What song did Patti Page set people dancing to in 1950 ?', 'coarse_label': 1, 'fine_label': 5}
task_input: What song did Patti Page set people dancing to in 1950 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What song did Patti Page set people dancing to in 1950 ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What song did Patti Page set people dancing to in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'29626'), (b'x-ratelimit-reset-requests', b'14m47.689s'), (b'x-ratelimit-reset-tokens', b'748ms'), (b'x-request-id', b'req_01hz0qc3fmfad8dftatxkajct2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7b63f55f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'14m51.623999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0qc5g6e2h8wz2sampgq7ht'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7c329c7f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific song and its association with Patti Page, which suggests it's a specific piece of information that can be looked up.
class_name: Description and abstract concept
class_index: 2
data: {'text': "In Beetle Bailey , can you name Sarge 's dog ?", 'coarse_label': 1, 'fine_label': 2}
task_input: In Beetle Bailey , can you name Sarge 's dog ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "In Beetle Bailey , can you name Sarge 's dog ?", 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Beetle Bailey , can you name Sarge 's dog ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'14m53.696s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0qc5sqf8kvc304p2f307sa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7c4fb24f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'14m57.624999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0qc7tefp6a631gqzfaqrz2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7d1ed11f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a character's dog in a comic strip, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What were the three prophecies the witches make to Macbeth ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What were the three prophecies the witches make to Macbeth ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What were the three prophecies the witches make to Macbeth ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What were the three prophecies the witches make to Macbeth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'14m59.772999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0qc81jfadsh1h829wjsxnj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7d36e2af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'15m3.711s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0qca20fp69xpwp47yjyrw8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7e04a44f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the prophecies made by the witches in Macbeth, which are abstract concepts.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'Why was the L.A. office of Shea and Gould closed ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why was the L.A. office of Shea and Gould closed ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why was the L.A. office of Shea and Gould closed ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why was the L.A. office of Shea and Gould closed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'15m5.664999999s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0qcacff4vv75b0dsb69aay'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7e26c00f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'15m9.598s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qccd3e3cbzdxt9d7bfb2d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7ef4d4cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reason for the closure of the L.A. office of Shea and Gould, which is a specific company or organization.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the history of Spartacus , the Roman slave and gladiator ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the history of Spartacus , the Roman slave and gladiator ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'15m11.681s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qccq3e3crj9nsdedvzs7r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7f15ec7f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'15m15.621999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0qceqef1vvcck6rnn5c7cv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7fe2fe0f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the history of Spartacus, which is a person, so it's likely a human being.
class_name: "Human being"
class_index: 3
data: {'text': 'What does the word affiant mean ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does the word affiant mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the word affiant mean ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the word affiant mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'15m17.759999999s'), (b'x-ratelimit-reset-tokens', b'831ms'), (b'x-request-id', b'req_01hz0qceyze2pvdjf3gzw1xgh5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e7ffa907f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'15m21.7s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0qcgzbec0a0ar44gr2vnm2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e80c9c21f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a word, which is a definition, which is a description of an abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Who do Herb and Tootsie live next door to ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who do Herb and Tootsie live next door to ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who do Herb and Tootsie live next door to ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who do Herb and Tootsie live next door to ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'15m23.666999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qch9sfp6vefmbv74eh3wm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e80e7e6ff9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'15m27.607s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0qcka5e3d8np2v9ce74a35'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e81b8b0af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the neighbors of Herb and Tootsie, which suggests that the answer is a person or a human being.
class_name: Human being
class_index: 3
data: {'text': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'15m29.725999999s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0qckjrfypsaaaz0pzjzxfd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e81d3c2df9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'15m33.665s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qcnk5fp6trec0s5rv3k3k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e82a2d29f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who served as a journalist for Reuter and The Times of London, which makes it likely to be a human being.
class_name: "HUM"
class_index: 3
data: {'text': "What cable network bills itself as `` the family entertainer '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What cable network bills itself as `` the family entertainer '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What cable network bills itself as `` the family entertainer '' ?", 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What cable network bills itself as `` the family entertainer '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'15m35.713999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qcnw5fk99rtrrb6j1dbax'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e82bee70f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'15m39.652s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0qcqwkf4w9xrrwkwvha4cx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e838c92af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a cable network, which is a type of entity, and it's being referred to by its nickname, which is a description.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What creative genius said : `` Everything comes to him who hustles while he waits '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What creative genius said : `` Everything comes to him who hustles while he waits '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'15m41.699s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0qcr61f8nanw5b8mvkdt8a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e83aba77f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'15m45.640999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qct6be3db0pwbmpbr3d30'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8478d1df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The quote mentions a creative genius, which is a human being, and the quote is attributed to someone, which is a description of an abstract concept.
class_name: Human being
class_index: 3
data: {'text': 'What U.S. state includes the San Juan Islands ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What U.S. state includes the San Juan Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What U.S. state includes the San Juan Islands ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state includes the San Juan Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'15m47.705s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0qctfje2jatajjj27gj63t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8496ebef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'15m51.65s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qcwftf1wad0exz6w0jps0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e85638caf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a U.S. state that includes the San Juan Islands.
class_name: Location
class_index: 4
data: {'text': 'Where is Webster University ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Webster University ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Webster University ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Webster University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'15m53.721999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0qcwrhe2j9r81a6n9b6zyf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e857fa0bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14240'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'15m57.657s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qcys2f4wt4egnayp6dv9g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e864ec8ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a specific university, which is a geographical location.
class_name: Location
class_index: 4
data: {'text': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14240'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'15m59.679s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qcz33f8n8myxnvxtd9de3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e866ee3ff9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14239'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'16m3.625999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qd139f4wr60103kksdpbm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e873c853f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location where one can find information about the English Civil War, which is a historical event.
class_name: Location
class_index: 4
data: {'text': 'What country imposed the Berlin Blockade in 1948 ?', 'coarse_label': 4, 'fine_label': 33}
task_input: What country imposed the Berlin Blockade in 1948 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What country imposed the Berlin Blockade in 1948 ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What country imposed the Berlin Blockade in 1948 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14239'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'16m5.737s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0qd1bhe3dtf017phv6wtdw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8755989f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14238'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'16m9.680999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qd3bsf1wv4a2kgy1n115s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8823b9cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically a blockade, which is a type of action taken by a country.
class_name: Location
class_index: 4
data: {'text': 'What is the average hourly rate of American workers ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the average hourly rate of American workers ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average hourly rate of American workers ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average hourly rate of American workers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14238'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'16m11.718999999s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0qd3mmec1ba6zdvpj85azs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8840d06f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14237'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'16m15.654s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0qd5n5f8ns092dcnww1gsq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e890ee45f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a numerical value, which is the average hourly rate of American workers.
class_name: NUM
class_index: 5
data: {'text': "How many types of dogs ' tails are there - three", 'coarse_label': 5, 'fine_label': 38}
task_input: How many types of dogs ' tails are there - three, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many types of dogs ' tails are there - three", 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many types of dogs ' tails are there - three
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14237'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'16m17.765999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qd5wfe7mvw5bf36b1q856'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8926f46f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14236'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'16m21.701s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qd7x1e2kbr9wpt7bm9rmw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e89f4a07f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of types of dog tails, which is a specific and countable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the exchange rate between England and the U.S. ?', 'coarse_label': 5, 'fine_label': 41}
task_input: What is the exchange rate between England and the U.S. ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the exchange rate between England and the U.S. ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the exchange rate between England and the U.S. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14236'), (b'x-ratelimit-remaining-tokens', b'29639'), (b'x-ratelimit-reset-requests', b'16m23.291999999s'), (b'x-ratelimit-reset-tokens', b'721ms'), (b'x-request-id', b'req_01hz0qd8k6f8nt34jkzrvrcftq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8a3bdd5f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14235'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'16m27.233s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0qdakhfyqssfmn47r9hwbr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8b09fbcf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the exchange rate between two countries, which is a financial information, and it can be considered as a numeric value.
class_name: Numeric value
class_index: 5
data: {'text': 'How much will the California be in the year 2000 ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much will the California be in the year 2000 ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much will the California be in the year 2000 ?', 'examples_str': 'Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much will the California be in the year 2000 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14235'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'16m29.736s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0qdavtf4xa6yrmyftbr6ks'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8b248dbf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 1976 Deep Throat clone provides the leading lady with a second larynx ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country owns Corsica ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14234'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'16m33.676999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0qdcw4e2rb9htrr7pwybgf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8bf2b9ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the future value of California, which is not a physical entity, but rather a concept. Therefore, I classify it as a Description and abstract concept.
class_name: DESC
class_index: 2
responses: [0, 0, 0, 0, 2, 2, 2, 1, 2, 2, 3, 2, 3, 3, 2, 3, 4, 4, 4, 4, 5, 5, 5, 2], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 0 proposed: 0.75, F1: 0.751, score: 1.501
best_score: 1.501
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 1976 Deep Throat clone provides the leading lady with a second larynx ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What country owns Corsica ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 1
train_batch: {'text': ["What famous actress made her first appearance on stage at the age of five in the year 191 as `` Baby '' ?", "What kind of species is the monster in the film `` Jaws '' ?", 'What is cache memory ?', 'What is measured in curies ?', 'What are the five basic swimming strokes ?', 'What is the occupation of Nicholas Cage ?', "What was Marilyn Monroe 's real name ?", 'What web sites are linked to the Report on Genesis Eldercare ?', 'What title does comedian Henry Youngman claim ?', 'What political party is Sinn Fein a part of ?'], 'coarse_label': tensor([3, 1, 2, 2, 1, 3, 3, 4, 3, 3]), 'fine_label': tensor([29,  2, 24, 24, 20, 30, 29, 35, 30, 28])}
before random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=2318, data={'text': "What 's the most popular contact lens color ?", 'coarse_label': 1, 'fine_label': 4}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1482, data={'text': 'Which city in Canada is the least-populated ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=164, data={'text': 'What is the smallest thing seen under the most powerful microscope , and how big is it ?', 'coarse_label': 1, 'fine_label': 13}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=2406, data={'text': "What 's the second-largest island in the world ?", 'coarse_label': 4, 'fine_label': 35}), Sample(index=1175, data={'text': 'About how many Americans are still unaccounted for from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14234'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'16m35.446999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0qdddff4x9ek89j9b1y0ma'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8c29e3ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14233'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'16m39.399s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0qdfdfe2rbqxh2spdrta2t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8cf6feff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common abbreviation for a type of electronic device.
class_name: ABBR
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14233'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'16m41.713999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0qdfpefdea15md7hxq2zsj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8d1198ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:08:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14232'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'16m45.644s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qdhq4fdevsh856vpghkt5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8de1b62f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does S.O.S. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does S.O.S. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does S.O.S. stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does S.O.S. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:08:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14232'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'16m47.752s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0qdhyxe2rsjjycf9k1dj99'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8dfbc95f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14231'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'16m51.694999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qdkz6fp8bvsgawr5my7gd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8ec8e96f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14231'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'16m53.159s'), (b'x-ratelimit-reset-tokens', b'754ms'), (b'x-request-id', b'req_01hz0qdmsffp8tec0m8rjbw84n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8f1ca3bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14230'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'16m57.093999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qdpt0f1xsthktg6tkhx6s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e8feac31f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol, which is a common characteristic of abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': 'What war did Florence Nightingale tend the troops in ?', 'coarse_label': 1, 'fine_label': 8}
task_input: What war did Florence Nightingale tend the troops in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What war did Florence Nightingale tend the troops in ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What war did Florence Nightingale tend the troops in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14230'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'16m59.586s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qdq70e2rtqsnkvxqq7c3r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9014e54f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14229'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'17m3.527999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0qds7afyr80vye8t3r31s0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e90e2f38f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: Florence Nightingale is a historical figure known for her work during the Crimean War, which is the war mentioned in the question.
class_name: Human being
class_index: 3
data: {'text': 'What language is mostly spoken in Brazil ?', 'coarse_label': 1, 'fine_label': 11}
task_input: What language is mostly spoken in Brazil ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What language is mostly spoken in Brazil ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What language is mostly spoken in Brazil ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14229'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'17m5.734s'), (b'x-ratelimit-reset-tokens', b'827ms'), (b'x-request-id', b'req_01hz0qdsfnfaftx7na3932h9gw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e90fd88df9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14228'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'17m9.669999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0qdvg5ec2r4cv4tw5pndb2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e91cbb2ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the most spoken language in Brazil, which is a specific piece of information, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What song did Patti Page set people dancing to in 1950 ?', 'coarse_label': 1, 'fine_label': 5}
task_input: What song did Patti Page set people dancing to in 1950 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What song did Patti Page set people dancing to in 1950 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What song did Patti Page set people dancing to in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14228'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'17m11.762999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0qdvqkfdfa05smjp6q0b53'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e91e3c60f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14227'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'17m15.698s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0qdxr4fyrs1m8s7ffqwp82'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e92b2f60f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific song and its impact on people, which is a type of description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "In Beetle Bailey , can you name Sarge 's dog ?", 'coarse_label': 1, 'fine_label': 2}
task_input: In Beetle Bailey , can you name Sarge 's dog ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "In Beetle Bailey , can you name Sarge 's dog ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Beetle Bailey , can you name Sarge 's dog ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14227'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'17m17.659999999s'), (b'x-ratelimit-reset-tokens', b'789ms'), (b'x-request-id', b'req_01hz0qdy2sec2tkhc3qj52cz61'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e92d48d9f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14226'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'17m21.606s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qe02zfkbrg3wm14zvyqgn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e93a1a49f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a character's dog in a comic strip, which is a specific entity in the context of Beetle Bailey.
class_name: Entity
class_index: 1
data: {'text': 'What were the three prophecies the witches make to Macbeth ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What were the three prophecies the witches make to Macbeth ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What were the three prophecies the witches make to Macbeth ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What were the three prophecies the witches make to Macbeth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14226'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'17m23.735s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0qe0b9fp99frb8s1vnsqbp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e93bcb70f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14225'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'17m27.676999999s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0qe2bjfngtwjfmfm5zvgb0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9489d7ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about specific information related to a literary work, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'Why was the L.A. office of Shea and Gould closed ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why was the L.A. office of Shea and Gould closed ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why was the L.A. office of Shea and Gould closed ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why was the L.A. office of Shea and Gould closed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14225'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'17m29.661999999s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0qe2p6ec2t0saf4hyfb1bc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e94abf2df9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14224'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'17m33.602s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qe4pjeaqbkwgp376zpnmn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e95788d3f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reason for the closure of the L.A. office of Shea and Gould, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the history of Spartacus , the Roman slave and gladiator ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the history of Spartacus , the Roman slave and gladiator ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14224'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'17m35.720999999s'), (b'x-ratelimit-reset-tokens', b'845ms'), (b'x-request-id', b'req_01hz0qe4zae2s9rkbdt5c442n8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e95959e1f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14223'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'17m39.665s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0qe6zje3g8m03msv8wsgc2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9663b40f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the history of a specific person, Spartacus, who was a Roman slave and gladiator.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What does the word affiant mean ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does the word affiant mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the word affiant mean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the word affiant mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14223'), (b'x-ratelimit-remaining-tokens', b'29574'), (b'x-ratelimit-reset-requests', b'17m41.763999999s'), (b'x-ratelimit-reset-tokens', b'852ms'), (b'x-request-id', b'req_01hz0qe76zf1ybvz4mtsb92bjf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e967bc75f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14222'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'17m45.701s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qe97ef79bna3camr14qne'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9749ec8f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a word, which is typically an abbreviation or acronym.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who do Herb and Tootsie live next door to ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who do Herb and Tootsie live next door to ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who do Herb and Tootsie live next door to ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who do Herb and Tootsie live next door to ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14222'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'17m47.737s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0qe9fpfp9v1nv99cjzfsch'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9763ff9f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14221'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'17m51.673999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qebg5e2sb8qtf92n72f08'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e98329fdf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the neighbors of a specific couple, which suggests that the answer is a person or a group of people.
class_name: Human being
class_index: 3
data: {'text': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14221'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'17m53.749s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0qebr1fnha9kbcdf4mx548'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e984ab27f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14220'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'17m57.677999999s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0qedrrfyrsr8bx2rdghwwy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e991ae07f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who served as a correspondent for news organizations, which suggests it is about a human being.
class_name: "HUM"
class_index: 3
data: {'text': "What cable network bills itself as `` the family entertainer '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What cable network bills itself as `` the family entertainer '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What cable network bills itself as `` the family entertainer '' ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What cable network bills itself as `` the family entertainer '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14220'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'17m59.762999999s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0qee06fp9rtgj1avrd8qx9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9932f4ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14219'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'18m3.689999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0qeg0ye3gta2hcajt4vqtd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9a00a2ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the name or branding of a cable network, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What creative genius said : `` Everything comes to him who hustles while he waits '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What creative genius said : `` Everything comes to him who hustles while he waits '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14219'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'18m5.629s'), (b'x-ratelimit-reset-tokens', b'739ms'), (b'x-request-id', b'req_01hz0qegckf1ytqtqj77305ncp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9a26c44f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14218'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'18m9.562s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0qejd6fpaaxv1bg4t19ft9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9af5f62f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The quote mentions a creative genius, which is a human being, and the quote is attributed to him.
class_name: HUM
class_index: 3
data: {'text': 'What U.S. state includes the San Juan Islands ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What U.S. state includes the San Juan Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What U.S. state includes the San Juan Islands ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state includes the San Juan Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14218'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'18m11.721999999s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0qejnxf8qs4v0x2tkzefhy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9b11899f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14217'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'18m15.666s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qemp5f8r9x11wwcgp7v2x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9bded46f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a U.S. state that includes the San Juan Islands.
class_name: Location
class_index: 4
data: {'text': 'Where is Webster University ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Webster University ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Webster University ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Webster University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14217'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'18m17.69s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0qemzwfahrnxwvnvdswv9y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9bfdf1cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14216'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'18m21.623999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qeq0ee3hb03vjq6t8fp7p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9cccc3af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a specific university, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14216'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'18m23.720999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0qeq96e9qa83wwdxz1qzv9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9ce8d9cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14215'), (b'x-ratelimit-remaining-tokens', b'29572'), (b'x-ratelimit-reset-requests', b'18m27.655s'), (b'x-ratelimit-reset-tokens', b'856ms'), (b'x-request-id', b'req_01hz0qes9re3h94faqz8ekc3wk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9db7faaf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location where one can find information about the English Civil War, which is a historical event.
class_name: Location
class_index: 4
data: {'text': 'What country imposed the Berlin Blockade in 1948 ?', 'coarse_label': 4, 'fine_label': 33}
task_input: What country imposed the Berlin Blockade in 1948 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What country imposed the Berlin Blockade in 1948 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What country imposed the Berlin Blockade in 1948 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14215'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'18m29.705s'), (b'x-ratelimit-reset-tokens', b'831ms'), (b'x-request-id', b'req_01hz0qesjze2sv5mkfsyjn92pk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9dd4911f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14214'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'18m33.641999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qevkee7qvkdcj10dhdwnp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9ea3ab0f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, and the Berlin Blockade was a significant event in the Cold War era.
class_name: Location
class_index: 4
data: {'text': 'What is the average hourly rate of American workers ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the average hourly rate of American workers ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average hourly rate of American workers ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average hourly rate of American workers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14214'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'18m35.705999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qevwpfysvdhkytch63b2t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9ec0c4cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14213'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'18m39.637999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0qexx9f1ztcsfpvsb3tf69'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9f8ff26f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, which is the average hourly rate of American workers.
class_name: Numeric value
class_index: 5
```
data: {'text': "How many types of dogs ' tails are there - three", 'coarse_label': 5, 'fine_label': 38}
task_input: How many types of dogs ' tails are there - three, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many types of dogs ' tails are there - three", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many types of dogs ' tails are there - three
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14213'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'18m41.741s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0qey5dec48j5tw7bq5tsrp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1e9fa9849f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14212'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'18m45.681999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qf05rfayr32k2x7h7sj8b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea077a71f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of types of dog tails, which is a specific and countable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the exchange rate between England and the U.S. ?', 'coarse_label': 5, 'fine_label': 41}
task_input: What is the exchange rate between England and the U.S. ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the exchange rate between England and the U.S. ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the exchange rate between England and the U.S. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14212'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'18m47.68s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0qf0fsf7a8y167z2n4pmy2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea097bc6f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14211'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'18m51.605s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0qf2gmearvs2w244xynax7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea166edaf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the exchange rate between two countries, which is a specific value, so it's likely a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much will the California be in the year 2000 ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much will the California be in the year 2000 ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much will the California be in the year 2000 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the smallest thing seen under the most powerful microscope , and how big is it ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: What 's the second-largest island in the world ?
class_name: Location 
class_index: 4
--------

Question: About how many Americans are still unaccounted for from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much will the California be in the year 2000 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14211'), (b'x-ratelimit-remaining-tokens', b'29624'), (b'x-ratelimit-reset-requests', b'18m53.614999999s'), (b'x-ratelimit-reset-tokens', b'752ms'), (b'x-request-id', b'req_01hz0qf2wpfpartcwvrvmbhqdk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea18c8daf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the smallest thing seen under the most powerful microscope , and how big is it ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What 's the second-largest island in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: About how many Americans are still unaccounted for from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14210'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'18m57.549s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0qf4x7e3hsm0ckh3h1mqh6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea25bbb5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a future date and a specific location, which suggests that the answer will be a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 3, 0, 2, 1, 0, 1, 2, 0, 3, 3, 0, 3, 4, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 1 proposed: 0.708, F1: 0.681, score: 1.389
reset_parameter
step: 2
train_batch: {'text': ["What singer 's hit song inspired the Dolly Parton Stallone movie Rhinestone ?", 'Who is the prime minister of Japan ?', 'What does RCA stand for ?', 'Who created Billy Pilgrim , a survivor of the Dresden firestorm ?', 'Where is Procter & Gamble based in the U.S. ?', 'Woodrow Wilson served as president of what university ?', "What explorer was nicknamed Iberia 's Pilot ?", 'What is diabetes ?', 'What company sells the most greeting cards ?', 'What is the name of the vaccine for chicken pox ?'], 'coarse_label': tensor([3, 3, 0, 3, 4, 3, 3, 2, 3, 1]), 'fine_label': tensor([29, 29,  1, 29, 35, 28, 29, 24, 28,  7])}
before random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=2318, data={'text': "What 's the most popular contact lens color ?", 'coarse_label': 1, 'fine_label': 4}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1482, data={'text': 'Which city in Canada is the least-populated ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=216, data={'text': 'What device provided a new way to listen to music in 1963 ?', 'coarse_label': 1, 'fine_label': 13}), Sample(index=859, data={'text': 'What is a caldera ?', 'coarse_label': 2, 'fine_label': 24}), Sample(index=234, data={'text': 'What kind of company is 7-Eleven ?', 'coarse_label': 3, 'fine_label': 28}), Sample(index=1613, data={'text': 'What city is sometimes called Gotham ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14210'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'18m59.708999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0qf56cf8rvasseyaw5j843'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea278cc8f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14209'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'19m3.655s'), (b'x-ratelimit-reset-tokens', b'754ms'), (b'x-request-id', b'req_01hz0qf76je7rs44ana4qymdgj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea346e55f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common abbreviation for a type of electronic device.
class_name: ABBR
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14209'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'19m5.704s'), (b'x-ratelimit-reset-tokens', b'745ms'), (b'x-request-id', b'req_01hz0qf7fvfazbc97mbcy3qvsc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea364f86f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14208'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'19m9.632999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0qf9gjfnjsf1pp0dd2rbbr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea433918f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
data: {'text': 'What does S.O.S. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does S.O.S. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does S.O.S. stand for ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does S.O.S. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14208'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'19m11.758999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0qf9r4f50944rsgfdtqewq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea44aa4ff9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14207'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'19m15.693999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0qfbrnfpbbzd5g383y0r73'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea519b6df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation S.O.S.
class_name: "ABBR"
class_index: 0
```
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14207'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'19m17.732s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0qfc10f20a1qfct7222s0v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea534cb0f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:09:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14206'), (b'x-ratelimit-remaining-tokens', b'29618'), (b'x-ratelimit-reset-requests', b'19m21.655s'), (b'x-ratelimit-reset-tokens', b'764ms'), (b'x-request-id', b'req_01hz0qfe1yf8sa7bxgvhq8mpe8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea604db3f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a specific phrase, which is typically an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'What war did Florence Nightingale tend the troops in ?', 'coarse_label': 1, 'fine_label': 8}
task_input: What war did Florence Nightingale tend the troops in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What war did Florence Nightingale tend the troops in ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What war did Florence Nightingale tend the troops in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:09:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14206'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'19m23.765999999s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0qfe99f208gpt6s8dhbknc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea61cec1f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14205'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'19m27.703s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0qfg9qf8sr3c3ayd2cvhaj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea6ea811f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about Florence Nightingale, a historical figure, and the context is about her work during a war, which suggests that the question is about a specific event or period in history.
class_name: Entity
class_index: 1
data: {'text': 'What language is mostly spoken in Brazil ?', 'coarse_label': 1, 'fine_label': 11}
task_input: What language is mostly spoken in Brazil ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What language is mostly spoken in Brazil ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What language is mostly spoken in Brazil ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14205'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'19m29.706999999s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hz0qfgjye9r8ddj7ffh3xy5d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea70797af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14204'), (b'x-ratelimit-remaining-tokens', b'29618'), (b'x-ratelimit-reset-requests', b'19m33.639999999s'), (b'x-ratelimit-reset-tokens', b'764ms'), (b'x-request-id', b'req_01hz0qfjkhe3ja8qfxfb09b1y7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea7d6ac0f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the language spoken in a specific country, which is a common fact about a location.
class_name: Location
class_index: 4
data: {'text': 'What song did Patti Page set people dancing to in 1950 ?', 'coarse_label': 1, 'fine_label': 5}
task_input: What song did Patti Page set people dancing to in 1950 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What song did Patti Page set people dancing to in 1950 ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What song did Patti Page set people dancing to in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14204'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'19m35.303s'), (b'x-ratelimit-reset-tokens', b'750ms'), (b'x-request-id', b'req_01hz0qfk9be2ttnehyqh0g0ptx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea81ce35f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14203'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'19m39.243999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0qfn9pfyvatva86zhyktwm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea8eaec6f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific event in the past, and it involves a song, which is a type of creative work. Therefore, it is likely an abbreviation or a title of a song.
class_name: ABBR
class_index: 0
data: {'text': "In Beetle Bailey , can you name Sarge 's dog ?", 'coarse_label': 1, 'fine_label': 2}
task_input: In Beetle Bailey , can you name Sarge 's dog ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "In Beetle Bailey , can you name Sarge 's dog ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Beetle Bailey , can you name Sarge 's dog ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14203'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'19m41.506999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0qfns4fkerkz54s2v82sga'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea91b93af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14202'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'19m45.45s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0qfqsdf20v5m2ymf713kqb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ea9e9b4cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a character's dog in a comic strip, which is a specific entity in the context of the comic strip.
class_name: Entity
class_index: 1
data: {'text': 'What were the three prophecies the witches make to Macbeth ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What were the three prophecies the witches make to Macbeth ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What were the three prophecies the witches make to Macbeth ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What were the three prophecies the witches make to Macbeth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14202'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'19m47.489s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0qfr9df51bnbawmcc3hh1g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eaa1ce31f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14201'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'19m51.424999999s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hz0qft9xfpc9a5gwr88r9v4b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eaaea87df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the prophecies made by the witches in Macbeth, which are abstract concepts.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why was the L.A. office of Shea and Gould closed ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why was the L.A. office of Shea and Gould closed ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why was the L.A. office of Shea and Gould closed ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why was the L.A. office of Shea and Gould closed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14201'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'19m53.738s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0qftj4e7vvgmcfvtmfb687'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eab049daf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14200'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'19m57.686999999s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0qfwj7f8tazfwb3qq9e7gj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eabd2c45f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reason for the closure of an office, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the history of Spartacus , the Roman slave and gladiator ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the history of Spartacus , the Roman slave and gladiator ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14200'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'19m59.666999999s'), (b'x-ratelimit-reset-tokens', b'705ms'), (b'x-request-id', b'req_01hz0qfwwne7vrhvd0105w4ppv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eabf3de0f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14199'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'20m3.597s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0qfyxbe2qt89j320dpbmkp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eacc2ea1f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the history of a specific person, Spartacus, who was a Roman slave and gladiator.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What does the word affiant mean ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does the word affiant mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the word affiant mean ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the word affiant mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14199'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'20m5.708999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0qfz6fe2vts5krvnnzbag5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eacdf80af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14198'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'20m9.639999999s'), (b'x-ratelimit-reset-tokens', b'758ms'), (b'x-request-id', b'req_01hz0qg174fyvs50308gfk1679'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eadae958f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a word, which is typically an abbreviation or a term.
class_name: ABBR
class_index: 0
data: {'text': 'Who do Herb and Tootsie live next door to ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who do Herb and Tootsie live next door to ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who do Herb and Tootsie live next door to ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who do Herb and Tootsie live next door to ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14198'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'20m11.729999999s'), (b'x-ratelimit-reset-tokens', b'739ms'), (b'x-request-id', b'req_01hz0qg1fke2vrzxmaxgmp00nq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eadc9a87f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14197'), (b'x-ratelimit-remaining-tokens', b'29618'), (b'x-ratelimit-reset-requests', b'20m15.668s'), (b'x-ratelimit-reset-tokens', b'764ms'), (b'x-request-id', b'req_01hz0qg3g1fdjaxcrrf0ya4j9b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eae97c4bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the neighbors of Herb and Tootsie, which suggests that the answer is a person or a group of people.
class_name: Human being
class_index: 3
data: {'text': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14197'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'20m16.265999999s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hz0qg568fpcv9658xbgjm11r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eaf43ce2f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14196'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'20m21.210999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0qg677e3k98sgnw6tyfj9j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eafafa64f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who served as a journalist for two news organizations, which makes it likely that the answer is a human being.
class_name: HUM
class_index: 3
data: {'text': "What cable network bills itself as `` the family entertainer '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What cable network bills itself as `` the family entertainer '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What cable network bills itself as `` the family entertainer '' ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What cable network bills itself as `` the family entertainer '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14196'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'20m23.317s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hz0qg6wkf51rx8xqrs0ajzwf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eaff3d6ef9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14195'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'20m27.249999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0qg8x6fdjtnnem6aj9qmt9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb0c2fa8f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the name or title of a cable network, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What creative genius said : `` Everything comes to him who hustles while he waits '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What creative genius said : `` Everything comes to him who hustles while he waits '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14195'), (b'x-ratelimit-remaining-tokens', b'29629'), (b'x-ratelimit-reset-requests', b'20m29.714999999s'), (b'x-ratelimit-reset-tokens', b'742ms'), (b'x-request-id', b'req_01hz0qg963e3kt4ey56rg968pm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb0de939f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14194'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'20m33.649s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qgb6pfyw9nwd1np54mprv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb1adbf2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a quote attributed to a creative genius, which is likely to be a human being.
class_name: "HUM"
class_index: 3
data: {'text': 'What U.S. state includes the San Juan Islands ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What U.S. state includes the San Juan Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What U.S. state includes the San Juan Islands ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state includes the San Juan Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14194'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'20m35.710999999s'), (b'x-ratelimit-reset-tokens', b'769ms'), (b'x-request-id', b'req_01hz0qgbfsf8tv0h3xf987j5zj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb1cad69f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14193'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'20m39.646s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0qgdg9fkft8fcfz9w3ychx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb29881df9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a U.S. state that includes the San Juan Islands.
class_name: Location
class_index: 4
data: {'text': 'Where is Webster University ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Webster University ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Webster University ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Webster University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14193'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'20m41.745s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0qgdr9eatsdqwa9b1w4mj1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb2b292df9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14192'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'20m45.683999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0qgfrpf7ct2kern3zcjy18'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb380c00f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a specific university, which is typically represented by a location.
class_name: Location
class_index: 4
data: {'text': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14192'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'20m47.777999999s'), (b'x-ratelimit-reset-tokens', b'773ms'), (b'x-request-id', b'req_01hz0qgfzmf8va076pr382b6wd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb396d43f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14191'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'20m51.719s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qghzze7ttdhpy25yh6vh5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb46481cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location where one can find information about the English Civil War.
class_name: Location
class_index: 4
data: {'text': 'What country imposed the Berlin Blockade in 1948 ?', 'coarse_label': 4, 'fine_label': 33}
task_input: What country imposed the Berlin Blockade in 1948 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What country imposed the Berlin Blockade in 1948 ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What country imposed the Berlin Blockade in 1948 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14191'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'20m53.366s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qgjktec7s41jz3f5eargx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb4a2b55f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14190'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'20m57.298999999s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0qgmmdf8va0e4vybpr963y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb572e7bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, and the Berlin Blockade was a significant event in world history.
class_name: Location
class_index: 4
data: {'text': 'What is the average hourly rate of American workers ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the average hourly rate of American workers ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average hourly rate of American workers ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average hourly rate of American workers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14190'), (b'x-ratelimit-remaining-tokens', b'29656'), (b'x-ratelimit-reset-requests', b'20m59.643s'), (b'x-ratelimit-reset-tokens', b'687ms'), (b'x-request-id', b'req_01hz0qgmzkfdk8vke12z1yvna0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb596851f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14189'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'21m3.584999999s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0qgpzxfkgay9zzd7q94rwg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb664badf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a numeric value, specifically the average hourly rate of American workers.
class_name: NUM
class_index: 5
data: {'text': "How many types of dogs ' tails are there - three", 'coarse_label': 5, 'fine_label': 38}
task_input: How many types of dogs ' tails are there - three, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many types of dogs ' tails are there - three", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many types of dogs ' tails are there - three
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14189'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'21m5.766999999s'), (b'x-ratelimit-reset-tokens', b'775ms'), (b'x-request-id', b'req_01hz0qgq77fams73c2zmfsspjr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb67bccbf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14188'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'21m9.707s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0qgs7kfnnb5bgwssmmp7vw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb749ea2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of types of dog tails, which is a specific and countable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the exchange rate between England and the U.S. ?', 'coarse_label': 5, 'fine_label': 41}
task_input: What is the exchange rate between England and the U.S. ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the exchange rate between England and the U.S. ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the exchange rate between England and the U.S. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14188'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'21m10.422999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0qgtrxf52swjn7cwzqdymm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb7e7e92f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14187'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'21m15.370999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0qgvsse2wssd7kjnntyxx9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb850be2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the exchange rate between two countries, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much will the California be in the year 2000 ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much will the California be in the year 2000 ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much will the California be in the year 2000 ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What device provided a new way to listen to music in 1963 ?
class_name: Entity 
class_index: 1
--------

Question: What is a caldera ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What kind of company is 7-Eleven ?
class_name: Human being 
class_index: 3
--------

Question: What city is sometimes called Gotham ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much will the California be in the year 2000 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14187'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'21m17.707999999s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hz0qgw2yf53af1rbrq7nrg2x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb86ed82f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What device provided a new way to listen to music in 1963 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is a caldera ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What kind of company is 7-Eleven ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is sometimes called Gotham ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14186'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'21m21.646s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0qgy3df5385amz6e7996f1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb93cedef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the future value of California, which is an abstract concept and not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
responses: [0, 0, 0, 0, 1, 4, 0, 1, 2, 1, 2, 0, 3, 3, 0, 3, 4, 4, 4, 4, 5, 5, 5, 2], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 2 proposed: 0.75, F1: 0.746, score: 1.496
reset_parameter
step: 3
train_batch: {'text': ["Where does Barney Rubble go to work after he drops Fred off in the `` Flintstones '' cartoon series ?", 'What do chefs call The Master Spice ?', 'What is Latin for incompetent ?', 'What kind of fruit is a Yellow Transparent ?', "What color is Mr. Spock 's blood ?", 'What did a 16th-century Aztec athlete get for putting a rubber ball through a ring ?', 'Who was the Russian ambassador to Hungary during the 1956 uprising ?', 'What country was the setting of You Only Live Twice ?', "What was the name of Sergeant Preston of the Yukon 's lead dog ?", 'What U.S. Air Force general led the first bombing raid over Tokyo ?'], 'coarse_label': tensor([4, 1, 1, 1, 1, 1, 3, 4, 1, 3]), 'fine_label': tensor([35,  9, 21,  9,  4, 13, 29, 33,  2, 29])}
before random_replace: [Sample(index=2394, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=2318, data={'text': "What 's the most popular contact lens color ?", 'coarse_label': 1, 'fine_label': 4}), Sample(index=621, data={'text': 'What is the Motto for the State of Maryland ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1482, data={'text': 'Which city in Canada is the least-populated ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=1166, data={'text': 'When was the Battle of Hastings ?', 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=2565, data={'text': 'What is SAP ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=799, data={'text': 'What do you call a Poker hand with five cards of the same suit ?', 'coarse_label': 1, 'fine_label': 21}), Sample(index=281, data={'text': "How can I look up someone 's E-mail address on the Internet ?", 'coarse_label': 2, 'fine_label': 26}), Sample(index=1692, data={'text': 'Who portrayed portly criminologist Carl Hyatt on Checkmate ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1482, data={'text': 'Which city in Canada is the least-populated ?', 'coarse_label': 4, 'fine_label': 32}), Sample(index=462, data={'text': 'How many three-letter permutations can be made from the four letters : c ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14186'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'21m23.545999999s'), (b'x-ratelimit-reset-tokens', b'750ms'), (b'x-request-id', b'req_01hz0qgyhkf7dsd4febteh9ws5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eb969952f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14185'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'21m27.49s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0qh0hvfb1ac6ppppxmk6d0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eba37af9f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation VCR.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14185'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'21m29.657999999s'), (b'x-ratelimit-reset-tokens', b'787ms'), (b'x-request-id', b'req_01hz0qh0whe2xak0awdvrkcxpy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eba59cc9f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14184'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'21m33.594s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0qh2x2fpeag72f1ykhms8m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebb28eacf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does S.O.S. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does S.O.S. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does S.O.S. stand for ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does S.O.S. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14184'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'21m35.758s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qh34me7vv0f4zf2z3twyy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebb3ff91f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does S.O.S. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14183'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'21m39.690999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0qh557e3naqyv7y19vhntj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebc0ea7bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of S.O.S., which is a common abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14183'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'21m41.737s'), (b'x-ratelimit-reset-tokens', b'827ms'), (b'x-request-id', b'req_01hz0qh5dffkgr8vdp04g85qsk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebc29c12f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:10:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14182'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'21m45.674999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qh7dxe9vahn99vmkssmnx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebcf7e93f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol, which is often represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What war did Florence Nightingale tend the troops in ?', 'coarse_label': 1, 'fine_label': 8}
task_input: What war did Florence Nightingale tend the troops in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What war did Florence Nightingale tend the troops in ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What war did Florence Nightingale tend the troops in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:10:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14182'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'21m47.730999999s'), (b'x-ratelimit-reset-tokens', b'821ms'), (b'x-request-id', b'req_01hz0qh7paf239q5tdwckr80ev'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebd11ff7f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What war did Florence Nightingale tend the troops in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14181'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'21m51.675999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qh9phfb1sk18rekqwty3j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebddfacef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about Florence Nightingale, a historical figure, so it's likely to be a question about a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What language is mostly spoken in Brazil ?', 'coarse_label': 1, 'fine_label': 11}
task_input: What language is mostly spoken in Brazil ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What language is mostly spoken in Brazil ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What language is mostly spoken in Brazil ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14181'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'21m53.291999999s'), (b'x-ratelimit-reset-tokens', b'755ms'), (b'x-request-id', b'req_01hz0qhacnfyxsnfygy2zgnhen'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebe26e10f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What language is mostly spoken in Brazil ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14180'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'21m57.234s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qhcczeawahcy7e2nthgqs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebef48d6f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the language spoken in Brazil, which is Portuguese.
class_name: DESC
class_index: 2
```
data: {'text': 'What song did Patti Page set people dancing to in 1950 ?', 'coarse_label': 1, 'fine_label': 5}
task_input: What song did Patti Page set people dancing to in 1950 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What song did Patti Page set people dancing to in 1950 ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What song did Patti Page set people dancing to in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14180'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'21m59.733s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0qhcnae2xrq3f1ptg89w4d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebf0ea5af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What song did Patti Page set people dancing to in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14179'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'22m3.672999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qhenqfyxr09p7j23c78h6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ebfddbbbf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific song and its association with a famous artist, which suggests it's about a specific entity.
class_name: ENTY
class_index: 1
data: {'text': "In Beetle Bailey , can you name Sarge 's dog ?", 'coarse_label': 1, 'fine_label': 2}
task_input: In Beetle Bailey , can you name Sarge 's dog ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "In Beetle Bailey , can you name Sarge 's dog ?", 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Beetle Bailey , can you name Sarge 's dog ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14179'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'22m4.764999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0qhfwbfap872r4vww8tv9p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec0599d7f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Beetle Bailey , can you name Sarge 's dog ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14178'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'22m9.701s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0qhgxjfpev3hqdzszqptsc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec0c3ef7f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a dog in a comic strip, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What were the three prophecies the witches make to Macbeth ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What were the three prophecies the witches make to Macbeth ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What were the three prophecies the witches make to Macbeth ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What were the three prophecies the witches make to Macbeth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14178'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'22m11.719999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0qhh6cfyy9tgww0v89v1zg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec0de84df9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What were the three prophecies the witches make to Macbeth ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14177'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'22m15.656s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0qhk6ve7wbngjhcmmxhx1t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec1ad970f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about prophecies made by witches in a play, which suggests a fictional context and a specific event.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why was the L.A. office of Shea and Gould closed ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why was the L.A. office of Shea and Gould closed ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why was the L.A. office of Shea and Gould closed ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why was the L.A. office of Shea and Gould closed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14177'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'22m17.714999999s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hz0qhkfsfpf9tfngc5eehd6m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec1caad2f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why was the L.A. office of Shea and Gould closed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14176'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'22m21.645s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qhngffpfayv4kt2ph6c8r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec299ca4f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reason for the closure of the L.A. office of Shea and Gould, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the history of Spartacus , the Roman slave and gladiator ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the history of Spartacus , the Roman slave and gladiator ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the history of Spartacus , the Roman slave and gladiator ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14176'), (b'x-ratelimit-remaining-tokens', b'29574'), (b'x-ratelimit-reset-requests', b'22m23.706999999s'), (b'x-ratelimit-reset-tokens', b'852ms'), (b'x-request-id', b'req_01hz0qhnsnfb2vzyvjpqct19ff'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec2b6de5f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the history of Spartacus , the Roman slave and gladiator ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14175'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'22m27.641999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qhqt6fnpsdhpfftvcv11r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec385fd7f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the history of a specific person, Spartacus, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What does the word affiant mean ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does the word affiant mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the word affiant mean ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the word affiant mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14175'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'22m29.756s'), (b'x-ratelimit-reset-tokens', b'845ms'), (b'x-request-id', b'req_01hz0qhr1vf24bj8p83xrdwvpw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec39d972f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the word affiant mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14174'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'22m33.691999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0qht2bf8xt5wvm5z71g6mb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec46cb7bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a word, which is a common definition of an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who do Herb and Tootsie live next door to ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who do Herb and Tootsie live next door to ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who do Herb and Tootsie live next door to ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who do Herb and Tootsie live next door to ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14174'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'22m35.65s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0qhtdae3p95r4bd2cz5yn4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec48fd59f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who do Herb and Tootsie live next door to ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14173'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'22m39.578999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0qhwe1e2ys1mes6g4yh0wx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec55d82ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the neighbors of Herb and Tootsie, which suggests that the answer is a person or a group of people.
class_name: Human being
class_index: 3
```
data: {'text': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What spy novelist served as Moscow correspondent for Reuter and The Times of London ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14173'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'22m41.759999999s'), (b'x-ratelimit-reset-tokens', b'847ms'), (b'x-request-id', b'req_01hz0qhwnjfpfbnw518gwtbkgq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec5769a3f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What spy novelist served as Moscow correspondent for Reuter and The Times of London ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14172'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'22m45.694999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0qhyp3eax8ck9fhzywjwh8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec644ccdf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who served as a correspondent for news organizations, which suggests a human being.
class_name: HUM
class_index: 3
data: {'text': "What cable network bills itself as `` the family entertainer '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What cable network bills itself as `` the family entertainer '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What cable network bills itself as `` the family entertainer '' ?", 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What cable network bills itself as `` the family entertainer '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14172'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'22m47.688s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0qhyzwf24v7x11n00t1s5m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec664e7bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What cable network bills itself as `` the family entertainer '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14171'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'22m51.623999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0qj10cf8yacp022d3sqh6e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec732970f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific cable network, which is likely to be an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What creative genius said : `` Everything comes to him who hustles while he waits '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What creative genius said : `` Everything comes to him who hustles while he waits '' ?", 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What creative genius said : `` Everything comes to him who hustles while he waits '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14171'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'22m53.712999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0qj19ce7zaxramqfgzrrvg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec74fae8f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What creative genius said : `` Everything comes to him who hustles while he waits '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14170'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'22m57.647s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0qj39yf24vfsmd78429jdz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec81ecf5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The quote seems to be attributed to a person, and the phrase "hustles while he waits" is a metaphorical expression, so I'm assuming it's a quote from a famous person.
class_name: Human being
class_index: 3
data: {'text': 'What U.S. state includes the San Juan Islands ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What U.S. state includes the San Juan Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What U.S. state includes the San Juan Islands ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state includes the San Juan Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14170'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'22m59.709999999s'), (b'x-ratelimit-reset-tokens', b'853ms'), (b'x-request-id', b'req_01hz0qj3k1e7x844nrcbxcvhaj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec83be64f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state includes the San Juan Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14169'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'23m3.646s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0qj5kheaxsqy5cn0gpgate'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec9098c5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographic location, specifically a U.S. state.
class_name: Location
class_index: 4
data: {'text': 'Where is Webster University ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Webster University ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Webster University ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Webster University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14169'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'23m5.300999999s'), (b'x-ratelimit-reset-tokens', b'773ms'), (b'x-request-id', b'req_01hz0qj69de2ttvbsy3se7m4hj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ec94fcfdf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Webster University ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14168'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'23m9.241s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0qj89rf24rvsj0hdpt6e24'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eca1d984f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a specific university, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14168'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'23m11.705999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0qj8k0e2z98yxtahtp404m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eca3bb2cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find all the information I need to know about the English Civil War , 1642-1649 , ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14167'), (b'x-ratelimit-remaining-tokens', b'29578'), (b'x-ratelimit-reset-requests', b'23m15.646s'), (b'x-ratelimit-reset-tokens', b'844ms'), (b'x-request-id', b'req_01hz0qjakcfyz82xmbf9yga4yn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecb08e6bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location of information about the English Civil War, which is a historical event.
class_name: Location
class_index: 4
data: {'text': 'What country imposed the Berlin Blockade in 1948 ?', 'coarse_label': 4, 'fine_label': 33}
task_input: What country imposed the Berlin Blockade in 1948 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What country imposed the Berlin Blockade in 1948 ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What country imposed the Berlin Blockade in 1948 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14167'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'23m17.296999999s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0qjb9cfyzbcekrg9taykyt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecb4fa4cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What country imposed the Berlin Blockade in 1948 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14166'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'23m21.239s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qjd9pf8ysztb79tyq1snn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecc1dc9af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a historical event, and the answer is a country, which is a location.
class_name: LOC
class_index: 4
data: {'text': 'What is the average hourly rate of American workers ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the average hourly rate of American workers ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average hourly rate of American workers ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average hourly rate of American workers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14166'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'23m23.768999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0qjdgyfpgayxt4btvm7d0s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecc34d8cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average hourly rate of American workers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14165'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'23m27.709s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qjfhafpg9398zw5qrjate'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecd02f9ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific piece of information, which is a numeric value.
class_name: NUM
class_index: 5
```
data: {'text': "How many types of dogs ' tails are there - three", 'coarse_label': 5, 'fine_label': 38}
task_input: How many types of dogs ' tails are there - three, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many types of dogs ' tails are there - three", 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many types of dogs ' tails are there - three
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14165'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'23m29.637s'), (b'x-ratelimit-reset-tokens', b'745ms'), (b'x-request-id', b'req_01hz0qjfwpf7g923cn4d7na228'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecd2697af9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many types of dogs ' tails are there - three\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14164'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'23m33.568999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0qjhxafnr9wr7fcz1xzw2s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecdf5bb5f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of types of dog tails, which is a specific and countable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the exchange rate between England and the U.S. ?', 'coarse_label': 5, 'fine_label': 41}
task_input: What is the exchange rate between England and the U.S. ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the exchange rate between England and the U.S. ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the exchange rate between England and the U.S. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14164'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'23m35.609999999s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0qjj9he3qa99wqq4p3sd82'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ece1cda2f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the exchange rate between England and the U.S. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14163'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'23m39.556s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0qjm9qfyzsm1yb4mwxaerf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eceea84ff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the exchange rate between two countries, which is a financial concept, and it's a specific value.
class_name: Numeric value
class_index: 5
data: {'text': 'How much will the California be in the year 2000 ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much will the California be in the year 2000 ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much will the California be in the year 2000 ?', 'examples_str': "Question: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is SAP ?
class_name: Abbreviation 
class_index: 0
--------

Question: What do you call a Poker hand with five cards of the same suit ?
class_name: Entity 
class_index: 1
--------

Question: How can I look up someone 's E-mail address on the Internet ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: How many three-letter permutations can be made from the four letters : c ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much will the California be in the year 2000 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14163'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'23m41.726999999s'), (b'x-ratelimit-reset-tokens', b'825ms'), (b'x-request-id', b'req_01hz0qjmj9f8za85pjygsk3h5s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecf059ccf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is SAP ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What do you call a Poker hand with five cards of the same suit ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How can I look up someone 's E-mail address on the Internet ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many three-letter permutations can be made from the four letters : c ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much will the California be in the year 2000 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14162'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'23m45.66s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0qjpjwfyxberc7c6sjvg82'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecfd3c4cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the future value of California, which is an abstract concept and not a specific entity or location.
class_name: DESC
class_index: 2
```
responses: [0, 0, 0, 0, 3, 2, 1, 1, 2, 1, 3, 0, 3, 3, 0, 3, 4, 4, 4, 4, 5, 5, 5, 2], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 3 proposed: 0.708, F1: 0.697, score: 1.4049999999999998
reset_parameter
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14162'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'23m47.738s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0qjpv3fdprp241fp5jw56n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ecfeedb0f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14161'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'23m51.670999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0qjrvpfb49bnz11zwcbs5r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed0bdf6cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the distance between two cities, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14161'), (b'x-ratelimit-remaining-tokens', b'29644'), (b'x-ratelimit-reset-requests', b'23m53.670999999s'), (b'x-ratelimit-reset-tokens', b'711ms'), (b'x-request-id', b'req_01hz0qjs60f25bexe8vfzx2mze'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed0de8caf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14160'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'23m57.606s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0qjv6hfph8wvz89pg2r8rb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed1acc5af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14160'), (b'x-ratelimit-remaining-tokens', b'29638'), (b'x-ratelimit-reset-requests', b'23m59.699s'), (b'x-ratelimit-reset-tokens', b'723ms'), (b'x-request-id', b'req_01hz0qjvfzf56asfs0nm946kps'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed1cade6f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14159'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'24m3.632999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0qjxghf56b099ygmgk0x19'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed299f81f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person, so it's likely referring to a human being.
class_name: "HUM"
class_index: 3
```
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14159'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'24m5.759999999s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0qjxr2e9xvwef6kkh171b1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed2b18a5f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14158'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'24m9.704s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0qjzraf25vchmfrrv2068c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed37f9e2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of an atom, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14158'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'24m11.726999999s'), (b'x-ratelimit-reset-tokens', b'775ms'), (b'x-request-id', b'req_01hz0qk00wfz0aj7gazfv784n8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed39aae4f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:11:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14157'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'24m15.663s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qk21cfarr0x7ax3a6btex'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed469ddff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in time, which is typically represented by a date.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:11:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14157'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'24m17.762999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0qk28tfph8j9vtbcv892nf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed480f20f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14156'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'24m21.705s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qk494e80tfvk003w4zs6m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed54e9fff9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the height of a specific building, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14156'), (b'x-ratelimit-remaining-tokens', b'29650'), (b'x-ratelimit-reset-requests', b'24m23.68s'), (b'x-ratelimit-reset-tokens', b'700ms'), (b'x-request-id', b'req_01hz0qk4k5e30rvgysnftbjkpc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed56eb7bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14155'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'24m27.621999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0qk6kge3raxmsvqc1d9x82'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed63cd5af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14155'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'24m29.765999999s'), (b'x-ratelimit-reset-tokens', b'787ms'), (b'x-request-id', b'req_01hz0qk6ttfz0rtbefygpfbv7j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed654e60f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14154'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'24m33.714s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0qk8tyfphte4mzw6h1yb9p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed72189bf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14154'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'24m35.74s'), (b'x-ratelimit-reset-tokens', b'773ms'), (b'x-request-id', b'req_01hz0qk933ecd86n0bvrye14kc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed73ba19f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14153'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'24m39.670999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qkb3rf909064j1p6dy600'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed80ac9cf9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color, which is a descriptive concept, so it's classified as a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14153'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'24m41.734s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0qkbc3e3rsskr7wmdzzw11'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed824d9bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14152'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'24m45.665s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hz0qkdcre319tg4bjjpgh251'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed8f3f11f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is typically described in a medical dictionary or a health resource.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14152'), (b'x-ratelimit-remaining-tokens', b'29631'), (b'x-ratelimit-reset-requests', b'24m47.705s'), (b'x-ratelimit-reset-tokens', b'737ms'), (b'x-request-id', b'req_01hz0qkdp0f90bj0v9zc0p9abz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed910857f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14151'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'24m51.651s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0qkfp5fdqvw7b9g94pxpaj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed9dea88f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a city that hosted a world fair in 1900, which suggests a specific location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14151'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'24m53.704s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0qkfzef26sefmd655s2h1f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ed9fcc01f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14150'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'24m57.640999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0qkhzxfkmrrce06s8zdp0c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edacaf0ef9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14150'), (b'x-ratelimit-remaining-tokens', b'29634'), (b'x-ratelimit-reset-requests', b'24m59.697s'), (b'x-ratelimit-reset-tokens', b'732ms'), (b'x-request-id', b'req_01hz0qkj9bfasv1jsxfp2gzdtj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edae88d7f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14149'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'25m3.632999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0qkm9xf57sbmwjz8dkk6t9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edbb7ba2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific value, which is a characteristic of a numeric value.
class_name: NUM
class_index: 5
```
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14149'), (b'x-ratelimit-remaining-tokens', b'29640'), (b'x-ratelimit-reset-requests', b'25m5.693s'), (b'x-ratelimit-reset-tokens', b'720ms'), (b'x-request-id', b'req_01hz0qkmkhe31skjwhcxjxs3z9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edbd6d5bf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14148'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'25m9.514999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0qkpqkfz1vf2k33sdgb62z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edcb0891f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific person who achieved a notable feat, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14148'), (b'x-ratelimit-remaining-tokens', b'29646'), (b'x-ratelimit-reset-requests', b'25m11.637s'), (b'x-ratelimit-reset-tokens', b'708ms'), (b'x-request-id', b'req_01hz0qkq2zecdtf6e3yh3q7cam'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edcd4ae6f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14147'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'25m15.565999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qks3pe2xbtg9dm4qn1xpm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edda3da9f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in time, which is typically represented by a date.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14147'), (b'x-ratelimit-remaining-tokens', b'29618'), (b'x-ratelimit-reset-requests', b'25m17.720999999s'), (b'x-ratelimit-reset-tokens', b'764ms'), (b'x-request-id', b'req_01hz0qkscefpjvt0qmnj5t8m08'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1eddbff3cf9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14146'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'25m21.662s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qkvcsfb6reqe6paqnmpj0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ede8d8c9f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of crickets, which is a specific fact about a living thing, so it's likely to be a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14146'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'25m23.471s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0qkvxbfknazx65yk4h95as'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edec2b75f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14145'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'25m27.405999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0qkxxwe7zat8wny2m1qyhe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edf91e00f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a physical property of a metal, which is a characteristic of a substance.
class_name: "NUM"
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14145'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'25m29.759999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0qky5de3t8pbtkh2tbar5w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1edfa9f36f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14144'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'25m33.696s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0qm05xe3t8yybngz9t70qt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ee077995f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person who developed a vaccination, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14144'), (b'x-ratelimit-remaining-tokens', b'29645'), (b'x-ratelimit-reset-requests', b'25m35.167s'), (b'x-ratelimit-reset-tokens', b'710ms'), (b'x-request-id', b'req_01hz0qm0zyeb0vjxm577gf6rch'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ee0cad59f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14143'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'25m39.103999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0qm30df58ab4zm7dqd5ave'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ee1999a2f9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is a type of abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What 's the most popular contact lens color ?
class_name: Entity 
class_index: 1
--------

Question: What is the Motto for the State of Maryland ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who portrayed portly criminologist Carl Hyatt on Checkmate ?
class_name: Human being 
class_index: 3
--------

Question: Which city in Canada is the least-populated ?
class_name: Location 
class_index: 4
--------

Question: When was the Battle of Hastings ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:12:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14143'), (b'x-ratelimit-remaining-tokens', b'29639'), (b'x-ratelimit-reset-requests', b'25m41.619999999s'), (b'x-ratelimit-reset-tokens', b'722ms'), (b'x-request-id', b'req_01hz0qm3caf27vnqd5ta0z4110'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ee1bfb89f9cc-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What 's the most popular contact lens color ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the Motto for the State of Maryland ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who portrayed portly criminologist Carl Hyatt on Checkmate ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which city in Canada is the least-populated ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the Battle of Hastings ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:12:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14142'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'25m45.534999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0qm5dffntrsjdg112q8srx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1ee28fe7af9cc-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 1, 2, 2, 2, 4, 3, 5, 3, 2, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Test Accuracy: 0.75, F1: 0.677
best_score: 1.501
