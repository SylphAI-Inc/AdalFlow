[tool.poetry]
name = "adalflow"

version = "0.2.6"
description = "The Library to Build and Auto-optimize LLM Applications"
authors = ["Li Yin <li@sylphai.com>"]
readme = "README.md"
repository = "https://github.com/SylphAI-Inc/AdalFlow"

license = "MIT"
maintainers = ["Li Yin <li@sylphai.com>"]
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["LLM", "NLP", "RAG", "devtools", "retrieval", "agent"]

include = [
    "adalflow/core/*",
    "adalflow/components/*",
    "adalflow/eval/*",
    "adalflow/datasets/*",
    "adalflow/utils/*",
    "adalflow/tracing/*",
    "adalflow/optim/*",
]


packages = [{ include = "adalflow", from = "." }]


[tool.poetry.dependencies]
python = ">=3.9, <4.0"

python-dotenv = "^1.0.1"
backoff = "^2.2.1"
jinja2 = "^3.1.3"
jsonlines = "^4.0.0"
tiktoken = "^0.7.0"
numpy = "^1.26.4"
tqdm = "^4.66.4"
pyyaml = "^6.0.1"
nest-asyncio = "^1.6.0"
colorama = "^0.4.6"

botocore = "^1.34.149" # if not specified, it will fail to resolve the dependency, we need to figure out a way to get rid of botocore dependency
diskcache = "^5.6.3"


# Optional dependencies
openai = { version = "^1.12.0", optional = true }
groq = { version = "^0.9.0", optional = true }
faiss-cpu = { version = "^1.8.0", optional = true }
sqlalchemy = { version = "^2.0.30", optional = true }
pgvector = { version = "^0.3.1", optional = true }
torch = { version = "^2.3.1", optional = true }
anthropic = { version = "^0.31.1", optional = true }
google-generativeai = { version = "^0.7.2", optional = true }
cohere = { version = "^5.5.8", optional = true }
ollama = { version = "^0.2.1", optional = true }
boto3 = { version = "^1.35.19", optional = true }

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-mock = "^3.14.0"
torch = "^2.3.1"
ollama = "^0.2.1"
faiss-cpu = "^1.8.0"
openai = "^1.12.0"
groq = "^0.9.0"
google-generativeai = "^0.7.2"
anthropic = "^0.31.1"


[tool.poetry.group.typing.dependencies]
mypy = "^1"
types-pyyaml = "^6.0.12.20240311" # for mypy
types-tqdm = "^4.66.0.20240417"


[tool.poetry.group.dev.dependencies] # specify the versions for extras
pre-commit = "^3.7.0"
graphviz = "^0.20.3"
tensorboard = "^2.17.0"
tensorboardx = "^2.6.2.2"
matplotlib = "^3.9.1"


[tool.poetry.group.extra.dependencies]
datasets = "^2.21.0"

[tool.poetry.extras] # allow pip install adalflow[openai, groq]
openai = ["openai"]
groq = ["groq"]
anthropic = ["anthropic"]
cohere = ["cohere"]
google-generativeai = ["google-generativeai"]
pgvector = ["pgvector"]
faiss-cpu = ["faiss-cpu"]
sqlalchemy = ["sqlalchemy"]
torch = ["torch"]
ollama = ["ollama"]
datasets = ["datasets"]


# [[tool.poetry.source]]
# name = "pypi"
# url = "https://pypi.org/simple"
# default = true
[[tool.poetry.source]]
name = "nvidia-pypi"
priority = "supplemental"
url = "https://pypi.nvidia.com"
# [[tool.poetry.source]]
# name = "nvidia-pypi"
# priority = "supplemental"
# url = "https://pypi.nvidia.com"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# for formatting and linting
[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
exclude = ["images"]
lint.extend-ignore = [
    "E402",  # Ignore module-level import issues
    "E731",
    "UP007", # Wants | over Union, which breaks 3.8
]
