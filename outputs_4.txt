DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['schema', 'example']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['input', 'task_desc_str', 'output_format_str', 'examples_str', 'input_label']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['output', 'label', 'input', 'description']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['input', 'task_desc_str', 'output_format_str', 'examples_str', 'input_label']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['schema', 'example']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['input', 'task_desc_str', 'output_format_str', 'examples_str', 'input_label']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['schema', 'example']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['schema', 'example']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['schema', 'example']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optimizer.optimizer.BootstrapFewShot object at 0x169886610>
few_shot_state_dict: None
step: 0
train_batch: {'text': ["What is `` the computer for the rest of us '' ?", 'What are the words to the Canadian National anthem ?', "What 's the difference between sleet and freezing rain ?", "What continent 's second-highest peak is Mont Blanc ?", 'What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?', 'How many days does a typical mayfly live ?'], 'coarse_label': tensor([2, 2, 2, 4, 3, 5]), 'fine_label': tensor([25, 25, 25, 34, 29, 38])}
task_input: What is `` the computer for the rest of us '' ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is `` the computer for the rest of us '' ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the computer for the rest of us '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the computer for the rest of us '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1692b5390>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x169dfd0a0> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x157d48090>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:32:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyym48v0eh0b7q2b0t89xapv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=yAbj0Gkd.69sY9wzVzWh_SCF2JZzn1y2RCKap7NfUkA-1716867179-1.0.1.1-EI04M35LsrVGFEsj04k4TSYKFGff0BGMzYQNYu_9wNKJdArVWx5ONBN3VzPnkiJF2QoHl3.ABv1PkmMAdUEj3w; path=/; expires=Tue, 28-May-24 04:02:59 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e3eae809440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a book title, which is a descriptive phrase.
class_name: DESC
class_index: 2
task_input: What are the words to the Canadian National anthem ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are the words to the Canadian National anthem ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the words to the Canadian National anthem ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the words to the Canadian National anthem ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:32:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'29641'), (b'x-ratelimit-reset-requests', b'11.628s'), (b'x-ratelimit-reset-tokens', b'718ms'), (b'x-request-id', b'req_01hyym496nfdgv7en5nxma4p1m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e4138b59440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the lyrics of the Canadian National anthem, which is a descriptive text.
class_name: "DESC"
class_index: 2
```
task_input: What 's the difference between sleet and freezing rain ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What 's the difference between sleet and freezing rain ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the difference between sleet and freezing rain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the difference between sleet and freezing rain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'29344'), (b'x-ratelimit-reset-requests', b'17.74s'), (b'x-ratelimit-reset-tokens', b'1.312s'), (b'x-request-id', b'req_01hyym49esf14rt3mkq5rshe91'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e42d9f49440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the difference between two weather-related phenomena, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: What continent 's second-highest peak is Mont Blanc ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What continent 's second-highest peak is Mont Blanc ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What continent 's second-highest peak is Mont Blanc ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What continent 's second-highest peak is Mont Blanc ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'29047'), (b'x-ratelimit-reset-requests', b'23.74s'), (b'x-ratelimit-reset-tokens', b'1.906s'), (b'x-request-id', b'req_01hyym49pzf95acykp4ht4f3bz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e447b489440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically the second-highest peak of a continent.
class_name: Location
class_index: 4
task_input: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'28761'), (b'x-ratelimit-reset-requests', b'29.718999999s'), (b'x-ratelimit-reset-tokens', b'2.477s'), (b'x-request-id', b'req_01hyym49zre9grm43nvmtvhjqz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e463cbb9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a specific type of human being.
class_name: HUM
class_index: 3
```
task_input: How many days does a typical mayfly live ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many days does a typical mayfly live ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many days does a typical mayfly live ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many days does a typical mayfly live ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'28446'), (b'x-ratelimit-reset-requests', b'35.755s'), (b'x-ratelimit-reset-tokens', b'3.108s'), (b'x-request-id', b'req_01hyym4a7eesp9nbtpmajzprz1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e47cdcf9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the lifespan of a mayfly, which is a specific fact that can be measured in days, making it a numeric value.
class_name: NUM
class_index: 5
responses: [2, 2, 2, 4, 3, 5], targets: [2, 2, 2, 4, 3, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([2, 2, 2, 4, 3, 5])
Eval Accuracy: 1.0, F1: 1.0
task_input: What is `` the computer for the rest of us '' ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is `` the computer for the rest of us '' ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the computer for the rest of us '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the computer for the rest of us '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'28223'), (b'x-ratelimit-reset-requests', b'41.578s'), (b'x-ratelimit-reset-tokens', b'3.554s'), (b'x-request-id', b'req_01hyym4ampfpfb2vepep33dn3x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e4a68289440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a book title, which is a descriptive phrase.
class_name: DESC
class_index: 2
task_input: What are the words to the Canadian National anthem ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are the words to the Canadian National anthem ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the words to the Canadian National anthem ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the words to the Canadian National anthem ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'27920'), (b'x-ratelimit-reset-requests', b'47.762999999s'), (b'x-ratelimit-reset-tokens', b'4.159s'), (b'x-request-id', b'req_01hyym4aw4e959vkwmp77gkmf2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e4bd9839440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the lyrics of the Canadian National anthem, which is a descriptive text.
class_name: "DESC"
class_index: 2
```
task_input: What 's the difference between sleet and freezing rain ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What 's the difference between sleet and freezing rain ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the difference between sleet and freezing rain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the difference between sleet and freezing rain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'27611'), (b'x-ratelimit-reset-requests', b'53.763999999s'), (b'x-ratelimit-reset-tokens', b'4.777s'), (b'x-request-id', b'req_01hyym4b3jeh09kpcxxf3rwwqc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e4d6ad79440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the difference between two weather-related phenomena, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: What continent 's second-highest peak is Mont Blanc ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What continent 's second-highest peak is Mont Blanc ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What continent 's second-highest peak is Mont Blanc ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What continent 's second-highest peak is Mont Blanc ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'27384'), (b'x-ratelimit-reset-requests', b'59.598s'), (b'x-ratelimit-reset-tokens', b'5.231s'), (b'x-request-id', b'req_01hyym4bg4esp8anyfmn55eash'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e4fed1b9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically the second-highest peak of a continent.
class_name: Location
class_index: 4
task_input: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name of the American who was captured when his plane went down over Syrian-held Lebanon ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'27110'), (b'x-ratelimit-reset-requests', b'1m5.697s'), (b'x-ratelimit-reset-tokens', b'5.779s'), (b'x-request-id', b'req_01hyym4bsmesp8evkmp9b6xxhq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e51dee19440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a specific type of human being.
class_name: HUM
class_index: 3
```
task_input: How many days does a typical mayfly live ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many days does a typical mayfly live ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many days does a typical mayfly live ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many days does a typical mayfly live ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14388'), (b'x-ratelimit-remaining-tokens', b'26882'), (b'x-ratelimit-reset-requests', b'1m11.582s'), (b'x-ratelimit-reset-tokens', b'6.236s'), (b'x-request-id', b'req_01hyym4c6pf8zs1bber4exj3rm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e5469439440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the lifespan of a mayfly, which is a specific fact that can be measured in days, making it a numeric value.
class_name: NUM
class_index: 5
responses: [2, 2, 2, 4, 3, 5], targets: [2, 2, 2, 4, 3, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([2, 2, 2, 4, 3, 5])
Eval Accuracy: 1.0, F1: 1.0
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14387'), (b'x-ratelimit-remaining-tokens', b'26600'), (b'x-ratelimit-reset-requests', b'1m17.695s'), (b'x-ratelimit-reset-tokens', b'6.8s'), (b'x-request-id', b'req_01hyym4cg9frkt9r3kmcr7gx40'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e565ae59440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the distance between two cities, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14386'), (b'x-ratelimit-remaining-tokens', b'26294'), (b'x-ratelimit-reset-requests', b'1m23.768999999s'), (b'x-ratelimit-reset-tokens', b'7.411s'), (b'x-request-id', b'req_01hyym4cqhfrkvyns2jsexry56'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e57cc199440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14385'), (b'x-ratelimit-remaining-tokens', b'26058'), (b'x-ratelimit-reset-requests', b'1m29.623999999s'), (b'x-ratelimit-reset-tokens', b'7.883s'), (b'x-request-id', b'req_01hyym4d3ae9gtxk3rtt9jyswy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e5a2e089440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical figure, Galileo, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14384'), (b'x-ratelimit-remaining-tokens', b'25755'), (b'x-ratelimit-reset-requests', b'1m35.767999999s'), (b'x-ratelimit-reset-tokens', b'8.49s'), (b'x-request-id', b'req_01hyym4dajfyftezggtchkpem6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e5b9f2e9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition of an atom, which is a fundamental concept in physics.
class_name: DESC
class_index: 2
```
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14383'), (b'x-ratelimit-remaining-tokens', b'25468'), (b'x-ratelimit-reset-requests', b'1m41.733s'), (b'x-ratelimit-reset-tokens', b'9.064s'), (b'x-request-id', b'req_01hyym4djzfdh8z93yaknmfgx9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e5d488d9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in time, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14382'), (b'x-ratelimit-remaining-tokens', b'25196'), (b'x-ratelimit-reset-requests', b'1m47.705s'), (b'x-ratelimit-reset-tokens', b'9.607s'), (b'x-request-id', b'req_01hyym4dw7f15bsd8b36xk68y1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e5f2a159440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the height of a building, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14381'), (b'x-ratelimit-remaining-tokens', b'24921'), (b'x-ratelimit-reset-requests', b'1m53.713999999s'), (b'x-ratelimit-reset-tokens', b'10.158s'), (b'x-request-id', b'req_01hyym4e56e9gr5jjhtd4x6j09'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e60ab989440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is a type of entity.
class_name: ENTY
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14380'), (b'x-ratelimit-remaining-tokens', b'24670'), (b'x-ratelimit-reset-requests', b'1m59.653999999s'), (b'x-ratelimit-reset-tokens', b'10.659s'), (b'x-request-id', b'req_01hyym4eg2fyftjxmvxdghm31n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e631dc69440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific characteristic of a country, which is a descriptive concept.
class_name: DESC
class_index: 2
```
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14379'), (b'x-ratelimit-remaining-tokens', b'24384'), (b'x-ratelimit-reset-requests', b'2m5.725999999s'), (b'x-ratelimit-reset-tokens', b'11.232s'), (b'x-request-id', b'req_01hyym4erkespacf9cyd1pwgec'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e64cf139440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color change, which is a natural phenomenon, so it's related to a description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14378'), (b'x-ratelimit-remaining-tokens', b'24122'), (b'x-ratelimit-reset-requests', b'2m11.658999999s'), (b'x-ratelimit-reset-tokens', b'11.755s'), (b'x-request-id', b'req_01hyym4f39fyftf5kzn6rzkae4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e66f9219440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific condition or disorder, which is typically described in a medical or scientific context.
class_name: DESC
class_index: 2
```
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14377'), (b'x-ratelimit-remaining-tokens', b'23847'), (b'x-ratelimit-reset-requests', b'2m17.705s'), (b'x-ratelimit-reset-tokens', b'12.305s'), (b'x-request-id', b'req_01hyym4fcgfqebbff4gx03k9qk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e68cab99440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific city that hosted a world fair in a specific year, which suggests a location.
class_name: LOC
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14376'), (b'x-ratelimit-remaining-tokens', b'23580'), (b'x-ratelimit-reset-requests', b'2m23.676999999s'), (b'x-ratelimit-reset-tokens', b'12.84s'), (b'x-request-id', b'req_01hyym4fpnfyftwqemtgv3wgee'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e6adcd39440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person, specifically whose head is on a dime.
class_name: HUM
class_index: 3
```
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14375'), (b'x-ratelimit-remaining-tokens', b'23333'), (b'x-ratelimit-reset-requests', b'2m29.645s'), (b'x-ratelimit-reset-tokens', b'13.334s'), (b'x-request-id', b'req_01hyym4g1qfdh8x2r454bmb4x1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e6d0efd9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a specific value, which is the average weight of a Yellow Labrador, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14374'), (b'x-ratelimit-remaining-tokens', b'23030'), (b'x-ratelimit-reset-requests', b'2m35.746s'), (b'x-ratelimit-reset-tokens', b'13.94s'), (b'x-request-id', b'req_01hyym4g9qf8zsgzbrg7gaxhec'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e6ea84b9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and a person, which is a common combination in human history.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14373'), (b'x-ratelimit-remaining-tokens', b'22737'), (b'x-ratelimit-reset-requests', b'2m41.726999999s'), (b'x-ratelimit-reset-tokens', b'14.525s'), (b'x-request-id', b'req_01hyym4gj8fqeaa3skb1k9y7t2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e7059b29440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14372'), (b'x-ratelimit-remaining-tokens', b'22488'), (b'x-ratelimit-reset-requests', b'2m47.657999999s'), (b'x-ratelimit-reset-tokens', b'15.023s'), (b'x-request-id', b'req_01hyym4gwzfdhbezw5brtdyy81'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e727b7c9440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of crickets, which is a specific piece of information, and it's not a human being, location, or abstract concept.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14371'), (b'x-ratelimit-remaining-tokens', b'22268'), (b'x-ratelimit-reset-requests', b'2m53.565999999s'), (b'x-ratelimit-reset-tokens', b'15.464s'), (b'x-request-id', b'req_01hyym4hakfrmb28nwk00mrz2z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e750d679440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the metal with the highest melting point, which is a specific numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14370'), (b'x-ratelimit-remaining-tokens', b'21997'), (b'x-ratelimit-reset-requests', b'2m59.695s'), (b'x-ratelimit-reset-tokens', b'16.006s'), (b'x-request-id', b'req_01hyym4hm4eh0s17s81hz4g9rb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e772f189440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the developer of a vaccination, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:33:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14370'), (b'x-ratelimit-remaining-tokens', b'21718'), (b'x-ratelimit-reset-requests', b'2m59.720999999s'), (b'x-ratelimit-reset-tokens', b'16.562999999s'), (b'x-request-id', b'req_01hyym4hwvf0ssgjaawfhk8hj0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e78d8cb9440-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'22753'), (b'x-ratelimit-reset-requests', b'3m3.641999999s'), (b'x-ratelimit-reset-tokens', b'14.493s'), (b'x-request-id', b'req_01hyym4kxvefj86eb1v19y01rc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e85ccd09440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is a abstract concept, and it's not a specific entity, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': "Question: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is RAM in the computer ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are the two languages of Malta ?
class_name: Entity 
class_index: 1
--------

Question: How do I find a web address for a company ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Which company claimed to be `` the world 's biggest toy store '' ?
class_name: Human being 
class_index: 3
--------

Question: What desert has the highest sand dunes ?
class_name: Location 
class_index: 4
--------

Question: When did CNN go on the air ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:33:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'22520'), (b'x-ratelimit-reset-requests', b'3m5.613999999s'), (b'x-ratelimit-reset-tokens', b'14.96s'), (b'x-request-id', b'req_01hyym4m9yfrm9nn0s31ajrxwm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e884eb89440-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is RAM in the computer ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are the two languages of Malta ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do I find a web address for a company ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What desert has the highest sand dunes ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did CNN go on the air ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:33:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14368'), (b'x-ratelimit-remaining-tokens', b'23542'), (b'x-ratelimit-reset-requests', b'3m9.559s'), (b'x-ratelimit-reset-tokens', b'12.915s'), (b'x-request-id', b'req_01hyym4pa5fpfac8y4v812bt0g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab2e9529279440-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
```
responses: [5, 4, 3, 2, 5, 5, 1, 2, 2, 2, 4, 3, 5, 3, 5, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Eval Accuracy: 0.85, F1: 0.742
